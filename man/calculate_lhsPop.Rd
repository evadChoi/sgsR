% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_lhsPop.R
\name{calculate_lhsPop}
\alias{calculate_lhsPop}
\title{Analyze covariates for lhs}
\usage{
calculate_lhsPop(mraster, PCA = TRUE, quant = TRUE, nQuant = 10, KLdiv = TRUE)
}
\arguments{
\item{mraster}{spatRaster. ALS metrics raster.}

\item{PCA}{Logical. Calculates principal component loadings of the population for PCA similarity factor testing.
\code{default = TRUE}.}

\item{quant}{Logical. Calculates quantile matrix of the population for quantile comparison testing.
\code{default = TRUE}.}

\item{nQuant}{Numeric. Number of quantiles to divide the population into for \code{quant}.
\code{default = 10}.}

\item{KLdiv}{Logical. Calculates covariate matrix of the population for Kullbackâ€“Leibler divergence testing.
\code{default = TRUE}. Relies on \code{quant = TRUE} to calculate.}
}
\value{
List of matrices to be used as input for \code{\link{calculate_lhsOpt}}.
}
\description{
Population level analysis of metric raster data
}
\note{
Special thanks to Brendan Malone for the original implementation of this algorithm.
}
\examples{
\dontrun{
#--- Load raster and access files ---#
r <- system.file("extdata", "wall_metrics_small.tif", package = "sgsR")
mr <- terra::rast(r)

calculate_lhsPop(mraster = mr)

calculate_lhsPop(mraster = mr, 
                 nQuant = 10, 
                 PCA = FALSE)
}
}
\references{
Malone BP, Minansy B, Brungard C. 2019. Some methods to improve the utility of conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451
}
\seealso{
Other calculate functions: 
\code{\link{calculate_coobs}()},
\code{\link{calculate_distance}()},
\code{\link{calculate_pcomp}()},
\code{\link{calculate_reqSamples}()}
}
\author{
Tristan R.H. Goodbody
}
\concept{calculate functions}
