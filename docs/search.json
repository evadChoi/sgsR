[{"path":"/articles/calculating.html","id":"dist","dir":"Articles","previous_headings":"","what":"calculate_distance","title":"calculating","text":"calculate_distance() function takes input raster access data outputs per pixel distance nearest access point. function particular value constraining sampling protocols sample_clhs() function output raster layer can used cost constraint.output raster input calculated distance layer (dist2access) appended.","code":"calculate_distance(raster = sraster, # input                    access = access, # define access road network                    plot = TRUE) # plot #> class       : SpatRaster  #> dimensions  : 277, 373, 2  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : memory   #>               memory   #> names       :      strata, dist2access  #> min values  : 1.000000000, 0.006621213  #> max values  :        4.00,     1061.66"},{"path":"/articles/calculating.html","id":"calculate_pcomp","dir":"Articles","previous_headings":"","what":"calculate_pcomp","title":"calculating","text":"calculate_pcomp() function take mraster input perform principal component analysis. number components defined nComp parameter specify number components rasterized output.","code":"calculate_pcomp(mraster = mraster, # input                 nComp = 5, # number of components to output                 plot = TRUE, # plot                 details = TRUE) # details about the principal component analysis appended #> $pca #> Standard deviations (1, .., p=7): #> [1] 2.44489597 0.77330715 0.58694359 0.24601882 0.09755856 0.09617098 #> [7] 0.02617551 #>  #> Rotation (n x k) = (7 x 7): #>                PC1         PC2         PC3         PC4         PC5 #> zmean    0.4054171  0.11311676 -0.15821737  0.05228532 -0.24488701 #> pzabove2 0.3403673  0.15301222  0.92238481  0.07785750  0.05997885 #> zsd      0.3438175 -0.69466285 -0.04508043 -0.09258238  0.61028250 #> zq20     0.3523317  0.61345601 -0.22005777 -0.48739208  0.41346282 #> zq50     0.3982735  0.14758611 -0.21579187  0.56156385  0.13175420 #> zq70     0.4039445 -0.05545307 -0.16438966  0.36438073 -0.28451820 #> zq90     0.3945200 -0.28293182 -0.01121444 -0.54493544 -0.54288754 #>                  PC6          PC7 #> zmean    -0.01489929  0.857253431 #> pzabove2  0.01677208  0.001756162 #> zsd       0.07596902  0.102045488 #> zq20      0.15378941 -0.137676849 #> zq50     -0.61264582 -0.254916462 #> zq70      0.70697577 -0.305272339 #> zq90     -0.30809836 -0.278516913 #>  #> $raster #> class       : SpatRaster  #> dimensions  : 277, 373, 5  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : memory   #>               memory   #>               memory   #>               ... and 2 more source(s) #> names       :        PC1,        PC2,        PC3,        PC4,        PC5  #> min values  : -4.9718830, -5.5371690, -3.6678708, -2.3303431, -0.6698738  #> max values  :   7.477925,   2.540762,   1.728753,   1.519315,   1.386004"},{"path":"/articles/calculating.html","id":"calculate_sampsize","dir":"Articles","previous_headings":"","what":"calculate_sampsize","title":"calculating","text":"calculate_sampsize() function allows users determine appropriate sample size using relative standard error input metric. mraster multiple layers provided, sample sizes determined layers. plot = TRUE rse defined, sequence rse values visualized indicators value matching sample size.","code":"#--- determine sample size based on relative standard error (rse) of 1% ---# calculate_sampsize(mraster = mraster,                    rse = 0.01) #>   nSamp  rse      var #> 1  2756 0.01    zmean #> 2  2065 0.01 pzabove2 #> 3  2563 0.01      zsd #> 4  4478 0.01     zq20 #> 5  3360 0.01     zq50 #> 6  2850 0.01     zq70 #> 7  2060 0.01     zq90 #--- change default threshold sequence values ---#  #--- if increment and rse are not divisible the closes value will be taken ---# p <- calculate_sampsize(mraster = mraster,                    rse = 0.025,                    start = 0.01,                    end = 0.08,                    increment = 0.01,                    plot = TRUE) #> 'rse' not perfectly divisible by 'incremenent.  #> Selecting closest sample size (rse = 0.03) based on values.  p #> $nSamp #> Registered S3 method overwritten by 'cli': #>   method     from          #>   print.boxx spatstat.geom #> # A tibble: 7 x 3 #> # Groups:   var [7] #>   nSamp   rse var      #>   <dbl> <dbl> <chr>    #> 1   314  0.03 zmean    #> 2   234  0.03 pzabove2 #> 3   292  0.03 zsd      #> 4   518  0.03 zq20     #> 5   385  0.03 zq50     #> 6   325  0.03 zq70     #> 7   233  0.03 zq90     #>  #> $plot"},{"path":"/articles/calculating.html","id":"calculate_allocation","dir":"Articles","previous_headings":"","what":"calculate_allocation","title":"calculating","text":"calculate_allocation() function calculates total number samples allocated sampling based total sample value (nSamp) input sraster. function utilized number functions including sample_strat. Three methods allocation currently included: proportional (prop; default), optimal (optim) allocation, equal (equal) allocation. Proportional - Samples allocated based area coverage strata. default method. Optimal - Samples allocated based within strata variation. Equal - number samples (nSamp) allocated strata.","code":""},{"path":"/articles/calculating.html","id":"proportional","dir":"Articles","previous_headings":"calculate_allocation","what":"Proportional allocation","title":"calculating","text":"Notice results total negative. indicates existing samples represent strata samples removed avoid representation. number added/removed details $total.","code":"#--- perform grid sampling ---# calculate_allocation(sraster = sraster,                       nSamp = 200) #>   strata total #> 1      1    58 #> 2      2    50 #> 3      3    46 #> 4      4    46 #--- calculate existing samples to include ---# e.sr <- extract_strata(sraster = sraster,                         existing = existing)  calculate_allocation(sraster = sraster,                       nSamp = 200,                       existing = e.sr) #>   strata total need #> 1      1     4   58 #> 2      2    -8   50 #> 3      3     7   46 #> 4      4    -3   46"},{"path":"/articles/calculating.html","id":"optimal","dir":"Articles","previous_headings":"calculate_allocation","what":"Optimal Allocation","title":"calculating","text":"Optimal allocation utilizes within strata metric variation allocate samples. means addition providing sraster, specific metric (mraster) must provided calculate variation optimally allocate samples.","code":"calculate_allocation(sraster = sraster, # stratified raster                      nSamp = 200, # desired sample number                      existing = e.sr, #existing samples                      allocation = \"optim\", # optimal allocation                      mraster = mraster$zq90, # metric raster                      force = TRUE) # force nSamp number #>   strata total need #> 1      1    -6   48 #> 2      2    -9   49 #> 3      3    18   57 #> 4      4    -3   46"},{"path":"/articles/calculating.html","id":"equal","dir":"Articles","previous_headings":"calculate_allocation","what":"Equal allocation","title":"calculating","text":"may instance user wants number samples allocated strata. case using allocation = equal ideal. instance, nSamp relates total number samples per strata rather total number samples overall. yields total 80 samples (20 nSamp 4 strata sraster.)","code":"calculate_allocation(sraster = sraster, # stratified raster                      nSamp = 20, # desired sample number                      allocation = \"equal\") # optimal allocation #> # A tibble: 4 x 2 #>   strata total #>    <dbl> <dbl> #> 1      1    20 #> 2      2    20 #> 3      3    20 #> 4      4    20"},{"path":"/articles/calculating.html","id":"sampeval","dir":"Articles","previous_headings":"","what":"Sample evaluation algorithms","title":"calculating","text":"following algorithms initially developed Dr. Brendan Malone University Sydney. work graciously provided depth description functionality algorithms originally developed improve soil sampling strategies. functions modified implemented can used structurally guided sampling approaches. Many thanks Dr. Malone excellent collaborator proponent open source algorithms. Please consult original reference ideas scripts extremely valuable helpful understanding sampling rationale. Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":"/articles/calculating.html","id":"coobs","dir":"Articles","previous_headings":"Sample evaluation algorithms","what":"calculate_coobs","title":"calculating","text":"calculate_coobs() function perform COunt OBServations (coobs) algorithm using existing sample data mraster covariates. algorithm aids user understanding existing sample data set distributed among landscape relation mraster covariates. output coobs raster used constrain clhs sampling using sample_clhs() areas reprented. coobs raster determines many observations similar terms covariate space every pixel.fucntion takes advantage parallel processing routines.","code":"calculate_coobs(mraster = mraster, # input                 existing = existing, # existing samples                 cores = 4, # parallel cores to use                 details = TRUE, # provide details from algorithm output                 plot = TRUE, # plot                 filename = tempfile(fileext = \".tif\")) # write output raster to tif"},{"path":"/articles/calculating.html","id":"lhseval","dir":"Articles","previous_headings":"","what":"Latin hypercube sampling evaluation algorithms","title":"calculating","text":"following 2 algorithms provide means maximize effectiveness latin hypercube sampling protocols.","code":""},{"path":"/articles/calculating.html","id":"lhspop","dir":"Articles","previous_headings":"Latin hypercube sampling evaluation algorithms","what":"calculate_lhsPop","title":"calculating","text":"calculate_lhsPop() function calculates population level statistics mraster covariates used including calculating principal components, quantile & covariate distributions, Kullback–Leibler divergence testing. outputs function mandatory use calculate_lhsOpt() function described next section. output details following: $values - Pixel values mraster $pcaLoad - PCA loadings $matQ - Quantile matrix $matCov - Covariate matrix","code":"#--- by default all statistical data are calculated ---# calculate_lhsPop(mraster = mraster) # input #--- statistical analyses can be chosen by setting their parameter to `FALSE` ---# calculate_lhsPop(mraster = mraster, # input                   nQuant = 10, # desired number of quantiles                  PCA = FALSE) # choose not to calculate PCA's"},{"path":"/articles/calculating.html","id":"lhsopt","dir":"Articles","previous_headings":"Latin hypercube sampling evaluation algorithms","what":"calculate_lhsOpt","title":"calculating","text":"calculate_lhsOpt() function performs bootsrapped latin hypercube sampling approach population level analysis mraster data performed determine optimal Latin hypercube sample size. Using statistical data calculated using calculate_lhsPop() varying sample sizes defined minSamp, maxSamp, step rep. Sampling protocols conducted statistical effectiveness sampling outcomes evaluated determine sample size minimized statistical representation maximized.","code":"#--- calculate lhsPop details ---# poplhs <- calculate_lhsPop(mraster = mr)  calculate_lhsOpt(popLHS = poplhs) calculate_lhsOpt(popLHS = poplhs,                   PCA = FALSE,                   iter = 200)"},{"path":"/articles/sampling.html","id":"access","dir":"Articles","previous_headings":"","what":"Access","title":"sampling","text":"feature sample_* functions ability define access corridors. Users can supply road access network (must sf line objects) define buffers around access samples excluded included. Important additional parameters access provided : buff_inner - inner buffer defines distance access samples taken (.e. don’t want samples within 50 m access layer set buff_inner = 50). buff_outer - Maximum distance samples can located access (.e. don’t want samples 200 meters access layer set buff_inner = 200)","code":""},{"path":"/articles/sampling.html","id":"srs","dir":"Articles","previous_headings":"","what":"sample_srs","title":"sampling","text":"provided simple example using sample_srs() function vignette(\"sgsR\"). provide additional examples . Notice input sample_srs() raster. means either sraster mraster supported.","code":"#--- perform simple random sampling ---# sample_srs(raster = sraster, # input sraster            nSamp = 200, # number of desired samples            plot = TRUE) # plot #> Simple feature collection with 200 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431130 ymin: 5337710 xmax: 438490 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (433510 5342210) #> 2  POINT (433510 5342210) #> 3  POINT (434050 5338710) #> 4  POINT (431310 5342870) #> 5  POINT (431970 5342570) #> 6  POINT (434410 5341110) #> 7  POINT (437510 5340590) #> 8  POINT (432850 5339050) #> 9  POINT (432210 5339970) #> 10 POINT (435010 5338370) sample_srs(raster = mraster, # input mraster            nSamp = 200, # number of desired samples            access = access, # define access road network            mindist = 200, # minimum distance samples must be apart from one another            buff_inner = 50, # inner buffer - no samples within this distance from road            buff_outer = 200, # outer buffer - no samples further than this distance from road            plot = TRUE) # plot #> Simple feature collection with 200 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431150 ymin: 5337730 xmax: 438550 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (432390 5342950) #> 2  POINT (438510 5338030) #> 3  POINT (433910 5341130) #> 4  POINT (431450 5342810) #> 5  POINT (435430 5342690) #> 6  POINT (436150 5343210) #> 7  POINT (434150 5342530) #> 8  POINT (434130 5338790) #> 9  POINT (433030 5342030) #> 10 POINT (434930 5339090) sample_srs(raster = sraster, # input            nSamp = 200, # number of desired samples            access = access, # define access road network            buff_inner = 50, # inner buffer - no samples within this distance from road            buff_outer = 200, # outer buffer - no samples further than this distance from road            plot = TRUE, # plot            filename = tempfile(fileext = \".shp\")) # write output samples to file #> Writing layer `file57d8687e1d53' to data source  #>   `C:\\Users\\tgood.stu\\AppData\\Local\\Temp\\Rtmp0605NZ\\file57d8687e1d53.shp' using driver `ESRI Shapefile' #> Writing 200 features with 0 fields and geometry type Point. #> Simple feature collection with 200 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431170 ymin: 5337710 xmax: 438530 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (431650 5342730) #> 2  POINT (431650 5342730) #> 3  POINT (433350 5342230) #> 4  POINT (434850 5342490) #> 5  POINT (434510 5338010) #> 6  POINT (435330 5342390) #> 7  POINT (434610 5342950) #> 8  POINT (433430 5341090) #> 9  POINT (434970 5339390) #> 10 POINT (434550 5339170)"},{"path":"/articles/sampling.html","id":"systematic","dir":"Articles","previous_headings":"","what":"sample_systematic","title":"sampling","text":"sample_systematic() function applies systematic sampling across area cellsize parameter defines resolution tessellation. Tesselation shape options defined square parameter, regular grid TRUE (default) hexagonal FALSE. location samples can also adjusted using locations parameter, centers takes center, corners takes corners, random takes random location within tessellation.","code":"#--- perform grid sampling ---# sample_systematic(raster = sraster, # input sraster                   cellsize = 1000, # grid distance                   plot = TRUE) # plot #> Simple feature collection with 40 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431600 ymin: 5338200 xmax: 437600 ymax: 5343200 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (431600 5338200) #> 2  POINT (432600 5338200) #> 3  POINT (433600 5338200) #> 4  POINT (434600 5338200) #> 5  POINT (435600 5338200) #> 6  POINT (436600 5338200) #> 7  POINT (437600 5338200) #> 8  POINT (432600 5339200) #> 9  POINT (433600 5339200) #> 10 POINT (434600 5339200) #--- perform grid sampling ---# sample_systematic(raster = sraster, # input sraster                   cellsize = 500, # grid distance                   square = FALSE, # hexagonal tessellation                   location = \"random\", # random sample within tessellation                   plot = TRUE) # plot #> Simple feature collection with 163 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431156.8 ymin: 5337704 xmax: 438486.1 ymax: 5343213 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                    geometry #> 1    POINT (431251 5338678) #> 2  POINT (431156.8 5340473) #> 3    POINT (431286 5338260) #> 4  POINT (431194.7 5338956) #> 5  POINT (431230.1 5339838) #> 6    POINT (431484 5340714) #> 7  POINT (431466.7 5341740) #> 8  POINT (431382.9 5342297) #> 9  POINT (431480.9 5338538) #> 10 POINT (431682.5 5340214) sample_systematic(raster = sraster, # input sraster             cellsize = 500, # grid distance             access = access, # define access road network             buff_inner = 50, # inner buffer - no samples within this distance from road             buff_outer = 200, # outer buffer - no samples further than this distance from road             square = FALSE, # hexagonal tessellation             location = \"corners\", # take corners instead of centers             plot = TRUE) #> Simple feature collection with 470 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337844 xmax: 438350 ymax: 5343185 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (431100 5340875) #> 2  POINT (431100 5340587) #> 3  POINT (431100 5340587) #> 4  POINT (431350 5340442) #> 5  POINT (431100 5340875) #> 6  POINT (431100 5340875) #> 7  POINT (431350 5342752) #> 8  POINT (431350 5340442) #> 9  POINT (431100 5340587) #> 10 POINT (431100 5340875)"},{"path":"/articles/sampling.html","id":"sstrat","dir":"Articles","previous_headings":"","what":"sample_strat","title":"sampling","text":"sample_strat() function contains hierarchical sampling algorithm originally developed Martin Queinnec. Queinnec, M., White, J. C., & Coops, N. C. (2021). Comparing airborne spaceborne photon-counting LiDAR canopy structural estimates across different boreal forest types. Remote Sensing Environment, 262(August 2020), 112510. algorithm uses moving window (wrow wcol parameters) filter input sraster locations stratum pixels spatially grouped rather dispersed individually across landscape. sampling performed 2 stages: Rule 1 - Sample within spatially grouped stratum pixels. Moving window defined wrow wcol. Rule 2 - samples exist satisfy desired sampling count, individual stratum pixels sampled. rule applied select particular sample defined rule attribute output samples. give examples :  cases, user may wish include existing sample data set within algorithm. order adjust total number samples needed per stratum reflect already present existing, can use utility function extract_strata(). function takes input sraster existing sample data set extracts stratum sample. samples can input sample_strat() function adjusts total required sample per class based representation existing. Notice e.sr now attribute named strata. parameter , sample_strat() give error.  mindist parameter defined example specifies minimum euclidian distance samples must apat one another. Notice sample outputs type rule attributes outline whether samples existing new whether rule1 rule2 used select individual samples.  include parameter determines whether existing samples included total count samples defined nSamp. defaults include = FALSE.","code":"#--- perform stratified sampling random sampling ---# sample_strat(sraster = sraster, # input sraster              nSamp = 200, # desired sample number              plot = TRUE) # plot #> Simple feature collection with 200 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431170 ymin: 5337730 xmax: 438470 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>    strata type  rule               geometry #> x       1  new rule1 POINT (436450 5341310) #> x1      1  new rule1 POINT (437170 5340150) #> x2      1  new rule1 POINT (432970 5339730) #> x3      1  new rule1 POINT (431870 5338510) #> x4      1  new rule1 POINT (437190 5340210) #> x5      1  new rule1 POINT (437350 5341590) #> x6      1  new rule1 POINT (436610 5342830) #> x7      1  new rule1 POINT (437230 5341110) #> x8      1  new rule1 POINT (431810 5341970) #> x9      1  new rule1 POINT (431350 5342790) #--- extract strata values to existing samples ---#               e.sr <- extract_strata(sraster = sraster, # input sraster                        existing = existing) # existing samples to add strata value to  e.sr #> Simple feature collection with 200 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431130 ymin: 5337770 xmax: 438450 ymax: 5343190 #> Projected CRS: UTM Zone 17, Northern Hemisphere #> First 10 features: #>    strata               geometry #> 1       1 POINT (434790 5338370) #> 2       4 POINT (438170 5340770) #> 3       2 POINT (436330 5340670) #> 4       2 POINT (437230 5341630) #> 5       1 POINT (435570 5340230) #> 6       2 POINT (438110 5342850) #> 7       4 POINT (435690 5339210) #> 8       4 POINT (435010 5342310) #> 9       4 POINT (432490 5342490) #> 10      2 POINT (436190 5341730) sample_strat(sraster = sraster, # input sraster              nSamp = 200, # desired sample number              access = access, # define access road network              existing = e.sr, # existing samples with strata values              mindist = 200, # minimum distance samples must be apart from one another              buff_inner = 50, # inner buffer - no samples within this distance from road              buff_outer = 200, # outer buffer - no samples further than this distance from road              plot = TRUE) # plot #> Simple feature collection with 400 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431130 ymin: 5337730 xmax: 438530 ymax: 5343190 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>    strata     type     rule               geometry #> 1       1 existing existing POINT (434790 5338370) #> 5       1 existing existing POINT (435570 5340230) #> 12      1 existing existing POINT (431830 5341870) #> 18      1 existing existing POINT (436770 5341310) #> 23      1 existing existing POINT (435910 5339890) #> 24      1 existing existing POINT (436230 5341530) #> 28      1 existing existing POINT (433110 5342310) #> 32      1 existing existing POINT (436570 5341630) #> 40      1 existing existing POINT (436150 5340970) #> 44      1 existing existing POINT (432830 5339250) sample_strat(sraster = sraster, # input              nSamp = 200, # desired sample number              access = access, # define access road network              existing = e.sr, # existing samples with strata values              include = TRUE, # include existing plots in nSamp total              buff_inner = 50, # inner buffer - no samples within this distance from road              buff_outer = 200, # outer buffer - no samples further than this distance from road              filename = tempfile(fileext = \".shp\"), # write output samples to file              plot = TRUE) # plot #> Writing layer `file57d8904440' to data source  #>   `C:\\Users\\tgood.stu\\AppData\\Local\\Temp\\Rtmp0605NZ\\file57d8904440.shp' using driver `ESRI Shapefile' #> Writing 200 features with 3 fields and geometry type Point. #> Simple feature collection with 200 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431130 ymin: 5337770 xmax: 438450 ymax: 5343190 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>     strata     type     rule               geometry #> 157      1 existing existing POINT (433370 5340370) #> 184      1 existing existing POINT (431430 5341090) #> 57       1 existing existing POINT (432770 5338050) #> 140      1 existing existing POINT (437250 5340850) #> 143      1 existing existing POINT (435630 5340850) #> 74       1 existing existing POINT (431970 5340610) #> 116      1 existing existing POINT (431130 5339470) #> 163      1 existing existing POINT (431330 5341110) #> 146      1 existing existing POINT (433330 5338190) #> 193      1 existing existing POINT (432770 5337790)"},{"path":"/articles/sampling.html","id":"clhs","dir":"Articles","previous_headings":"","what":"sample_clhs","title":"sampling","text":"sample_clhs() function implements conditioned latin hypercube (clhs) sampling functionality. number functions sgsR package help provide guidance clhs sampling including calculate_lhsPop() calculate_lhsOpt(). sure check functions better understanding optimize sample numbers. Syntax function similar others shown , though parameters like iter, define number iterations within Metropolis-Hastings process important consider. examples use low iter value takes less time run. Default values iter within clhs package 10,000.    cost parameter defines mraster covariate used constrain clhs sampling. number variables. example distance pixel road access (see example ), terrain slope, output calculate_coobs(), many others.","code":"sample_clhs(mraster = mraster, # input             nSamp = 200, # desired sample number             plot = TRUE, # plot              iter = 100) # number of iterations sample_clhs(mraster = mraster, # input             nSamp = 300, # desired sample number             existing = existing, # existing samples             iter = 100, # number of iterations             details = TRUE, # output details             plot = TRUE) # clhs details sample_clhs(mraster = mraster, # input             nSamp = 300, # desired sample number             iter = 100, # number of iterations             existing = existing, # existing samples             access = access, # define access road network             buff_inner = 100, # inner buffer - no samples within this distance from road             buff_outer = 300, # outer buffer - no samples further than this distance from road             plot = TRUE) # plot #--- cost constrained examples ---# #--- calculate distance to access layer for each pixel in mr ---# mr.c <- calculate_distance(raster = mraster, # input                            access = access,                            plot = TRUE) # define access road network sample_clhs(mraster = mr.c, # input             nSamp = 250, # desired sample number             iter = 100, # number of iterations             cost = \"dist2access\", # cost parameter - name defined in calculate_distance()             plot = TRUE) # plot sample_clhs(mraster = mr.c, # input             nSamp = 250, # desired sample number             existing = existing, # existing samples             iter = 100, # number of iterations             cost = \"dist2access\", # cost parameter - name defined in calculate_distance()             plot = TRUE) # plot"},{"path":"/articles/sampling.html","id":"balanced","dir":"Articles","previous_headings":"","what":"sample_balanced","title":"sampling","text":"sample_balanced() algorithm performs balanced sampling methodology stratifyR / SamplingBigData packages.","code":"sample_balanced(mraster = mraster, # input                 nSamp = 200, # desired sample number                 plot = TRUE) # plot #> Simple feature collection with 200 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431150 ymin: 5337750 xmax: 438530 ymax: 5343190 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (431490 5343190) #> 2  POINT (436050 5343170) #> 3  POINT (437650 5343130) #> 4  POINT (434070 5343110) #> 5  POINT (438270 5343070) #> 6  POINT (437870 5342950) #> 7  POINT (438170 5342930) #> 8  POINT (432730 5342910) #> 9  POINT (434730 5342910) #> 10 POINT (434650 5342890) sample_balanced(mraster = mraster, # input                 nSamp = 100, # desired sample number                 algorithm = \"lcube\", # algorithm type                 access = access, # define access road network                 buff_inner = 50, # inner buffer - no samples within this distance from road                 buff_outer = 200) # outer buffer - no samples further than this distance from road #> Simple feature collection with 100 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431310 ymin: 5337770 xmax: 438350 ymax: 5343170 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (434510 5338590) #> 2  POINT (436850 5338310) #> 3  POINT (434310 5342990) #> 4  POINT (433090 5342890) #> 5  POINT (432590 5340770) #> 6  POINT (433670 5340290) #> 7  POINT (433670 5342950) #> 8  POINT (438190 5338490) #> 9  POINT (436030 5339890) #> 10 POINT (435090 5338550)"},{"path":"/articles/sampling.html","id":"ahels","dir":"Articles","previous_headings":"","what":"sample_ahels","title":"sampling","text":"sample_ahels() function performs adapted Hypercube Evaluation Legacy Sample (ahels) algorithm using existing sample data mraster. New samples allocated based quantile ratios existing sample mraster covariate dataset. algorithm: Determines quantile distributions existing samples mraster covariates. Determines quantiles disparity samples covariates. Prioritizes sampling within quantile improve representation. use function, user first specify number quantiles (nQuant) followed either nSamp (total number desired samples added) threshold (proportional representation sample covariate quantiles - default 0.9) parameters. recommended use threshold values 0.9 higher values can currently cause algorithm add samples repeatedly.  Notice threshold, nSamp, nQuant defined. Thats defaults threshold = 0.9 nQuant = 10. first matrix output shows quantile ratios sample covariates. value 1.0 means samples covariates equally represented. Values 1.0 represented sample, less 1 represented sample.  Note total number samples 500. total existing samples (200) number defined nSamp = 300.","code":"sample_ahels(mraster = mraster[[1:3]], # input mraster - first 3 layers only              existing = existing, # existing samples              plot = TRUE) # plot #> Simple feature collection with 270 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431130 ymin: 5337750 xmax: 438530 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        type      zmax zmean  zsd               geometry #> 1  existing 13.690000  93.9 4.98 POINT (434790 5338370) #> 2  existing  8.599999  90.7 2.67 POINT (438170 5340770) #> 3  existing 11.969999  94.1 3.43 POINT (436330 5340670) #> 4  existing 10.510000  85.8 6.08 POINT (437230 5341630) #> 5  existing 13.150000  92.3 5.72 POINT (435570 5340230) #> 6  existing  9.860000  85.2 4.03 POINT (438110 5342850) #> 7  existing  9.110000  77.2 3.25 POINT (435690 5339210) #> 8  existing  5.840000  73.5 3.72 POINT (435010 5342310) #> 9  existing  7.600000  76.0 4.28 POINT (432490 5342490) #> 10 existing 11.460000  90.6 3.80 POINT (436190 5341730) sample_ahels(mraster = mraster[[1:3]], # input mraster - first 3 layers only              existing = existing, # existing samples              nQuant = 20, # define 20 quantiles              nSamp = 300, # total samples desired              filename = tempfile(fileext = \".shp\")) # write samples to disc #> Simple feature collection with 500 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431130 ymin: 5337710 xmax: 438530 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        type      zmax zmean  zsd               geometry #> 1  existing 13.690000  93.9 4.98 POINT (434790 5338370) #> 2  existing  8.599999  90.7 2.67 POINT (438170 5340770) #> 3  existing 11.969999  94.1 3.43 POINT (436330 5340670) #> 4  existing 10.510000  85.8 6.08 POINT (437230 5341630) #> 5  existing 13.150000  92.3 5.72 POINT (435570 5340230) #> 6  existing  9.860000  85.2 4.03 POINT (438110 5342850) #> 7  existing  9.110000  77.2 3.25 POINT (435690 5339210) #> 8  existing  5.840000  73.5 3.72 POINT (435010 5342310) #> 9  existing  7.600000  76.0 4.28 POINT (432490 5342490) #> 10 existing 11.460000  90.6 3.80 POINT (436190 5341730)"},{"path":"/articles/sgsR.html","id":"str","dir":"Articles","previous_headings":"","what":"Algorithm structure","title":"sgsR","text":"sgsR scripted primarily using terra package raster processing sf package vector manipulation. 3 primary function verbs package currently uses: strat_* - stratify verb implies functions applying stratification algorithms input metrics raster mraster output stratified raster sraster. sample_* - sample verb implies functions extracting samples srasters produced strat_* functions. algorithms (e.g. sample_srs(), sample_balanced(), sample_systematic()) able take mrasters inputs dependent stratified inputs sampling. calculate_* - calculate verb implies functions performing calculations used consequent processing. use predefined sample analysis algorithms calculate_ahels(), calculate_coobs() also included.","code":""},{"path":"/articles/sgsR.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"sgsR","text":"Worked examples functions provided using data internal package. load internal mraster road access data use following code. Follow along machine see outputs get better sense package functions.","code":""},{"path":"/articles/sgsR.html","id":"mrast","dir":"Articles","previous_headings":"Example data","what":"Metrics rasters - mraster","title":"sgsR","text":"","code":"library(sgsR) library(terra) library(sf)  #--- Load mraster and access files ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\")  #--- load the mraster using the terra package ---# mraster <- terra::rast(r)"},{"path":"/articles/sgsR.html","id":"vect","dir":"Articles","previous_headings":"Example data","what":"Road access data","title":"sgsR","text":"plot see first band (zmax) mraster access vector overlaid.","code":"a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\")  #--- load the access vector using the sf package ---# access <- sf::st_read(a) #> Reading layer `roads' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\roads.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 167 features and 2 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere terra::plot(mraster[[1]]) terra::plot(access, add = TRUE, col = \"black\")"},{"path":"/articles/sgsR.html","id":"srast","dir":"Articles","previous_headings":"","what":"Stratified rasters - sraster","title":"sgsR","text":"purposes tutorial also going show produce basic sraster existing sample data used examples . make sraster use strat_kmeans() function input mraster stratified using kmeans algorithm.  sraster produced apply sample_srs() algorithm randomly samples points within sraster produce existing sample dataset.  now mraster, access, sraster existing data sets generated. Expect see data used examples document.","code":"#--- apply kmeans algorithm to metrics raster ---# sraster <- strat_kmeans(mraster = mraster, # use mraster as input for sampling                         nStrata = 4, # algorithm will produce 4 strata                         plot = TRUE) # algorithm will plot output #--- set seed ---# set.seed(2021)  #--- apply kmeans algorithm to metrics raster ---# existing <- sample_srs(raster = mraster, # use mraster as input for sampling                        nSamp = 200, # request 200 samples be taken                        mindist = 100, # define that samples must be 100 m apart                        plot = TRUE) # algorithm will plot output"},{"path":"/articles/sgsR.html","id":"pipe","dir":"Articles","previous_headings":"","what":"%>%","title":"sgsR","text":"sgsR package leverages %>% operator magrittr package. allows us “pipe” operations together save amount code needed achieve outcome. simple example .","code":"#--- non piped ---# sraster <- strat_kmeans(mraster = mraster, # use mraster as input for sampling                         nStrata = 4, # algorithm will produce 4 strata                         plot = TRUE) # algorithm will plot output  existing <- sample_srs(raster = sraster, # use mraster as input for sampling                        nSamp = 200, # request 200 samples be taken                        mindist = 100, # define that samples must be 100 m apart                        plot = TRUE) # algorithm will plot output  extract_metrics(mraster = mraster,                 existing = existing)   #--- piped ---# strat_kmeans(mraster = mraster, nStrata = 4) %>%   sample_srs(., nSamp = 200, mindist = 100) %>%   extract_metrics(mraster = mraster, existing = .)"},{"path":"/articles/stratification.html","id":"kmeans","dir":"Articles","previous_headings":"","what":"strat_kmeans","title":"stratification","text":"provide preliminary example strat_kmeans() algorithm prepare sraster input data . Notice nothing plotted… ’s plot = FALSE default functions sgsR. See examples plot = TRUE.","code":"#--- perform stratification using k-means ---# strat_kmeans(mraster = mraster, # input              nStrata = 5) # algorithm will produce 4 strata #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      5 strat_kmeans(mraster = mraster, # input              nStrata = 10, # algorithm will produce 10 strata              iter = 1000, # set minimum number of iterations to determine kmeans centers              algorithm = \"MacQueen\", # use MacQueen algorithm              plot = TRUE) # plot output #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :     10 strat_kmeans(mraster = mraster, # input              nStrata = 5, # algorithm will produce 4 strata              center = FALSE, # do not center data              scale = FALSE, # do not scale data              plot = TRUE, # plot output              filename = tempfile(fileext = \".tif\"), # write output sraster to file              overwrite = TRUE) # overwrite file on disc if it exists #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      5"},{"path":"/articles/stratification.html","id":"strat_quantiles","dir":"Articles","previous_headings":"","what":"strat_quantiles","title":"stratification","text":"strat_quantiles() algorithm divides data equally sized strata (nStrata). Similar strat_breaks(), algorithm allows stratification single mraster, user can supply secondary mraster (mraster2) specify associated number desired strata (nStrata2). dual stratification output always result product \\(nStrata * nStrata2\\).","code":"#--- perform quantiles stratification ---# strat_quantiles(mraster = mraster$zq90,                 nStrata = 4,                 plot = TRUE) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      4  #--- dual stratification - will produce 12 output strata ---# strat_quantiles(mraster = mraster$zq90,                  mraster2 = mraster$zsd,                 nStrata = 3,                  nStrata2 = 4) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :     12"},{"path":"/articles/stratification.html","id":"strat_breaks","dir":"Articles","previous_headings":"","what":"strat_breaks","title":"stratification","text":"strat_breaks() function stratifies data based user-defined breaks covariates. single metric can defined additional metric2 can supplied. breaks breaks2 correspond user-defined breaks metric metric2 respectively. breaks created can input function using breaks breaks2 parameters.","code":"#--- perform stratification using user-defined breaks ---#  #--- define breaks for metric ---# breaks <- c(seq(0,100,20))  breaks #> [1]   0  20  40  60  80 100  #--- perform stratification using user-defined breaks ---#  values <- terra::values(mraster$zq90)  #--- define breaks for metric ---# breaks2 <- quantile(values, na.rm=TRUE)  breaks2 #>    0%   25%   50%   75%  100%  #>  0.00  9.27 14.72 18.09 32.54 #--- stratify on 1 metric only ---#  strat_breaks(mraster = mraster$zmean,              breaks = breaks,              details = TRUE,              plot = TRUE) #> $details #> $details$breaks #> [1]   0  20  40  60  80 100 #>  #> $details$breaks2 #> NULL #>  #>  #> $raster #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      3  #>  #> $plot #--- stratify on 1 metric only ---#  strat_breaks(mraster = mraster$zq90,              breaks = breaks2,              details = TRUE,              plot = TRUE) #> $details #> $details$breaks #>    0%   25%   50%   75%  100%  #>  0.00  9.27 14.72 18.09 32.54  #>  #> $details$breaks2 #> NULL #>  #>  #> $raster #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      5  #>  #> $plot"},{"path":"/articles/stratification.html","id":"strat_poly","dir":"Articles","previous_headings":"","what":"strat_poly","title":"stratification","text":"strat_poly() algorithm stratifies based spatial polygon attributes features. user may wish stratify based categorical empirical variables given ALS data (e.g. species forest inventory polygons). method allows user define attribute interest well features within attributes grouped stratification. user defines input poly associated attribute. raster layer must provided guide spatial extent resolution output stratification polygon. Based vector list features, stratification applied, polygon rasterized appropriate strata. attribute column must defined, features within must specified define number composition output strata. case attribute = \"NUTRIENTS\" features within NUTRIENTS (poor, rich, medium) define 3 desired output classes.  features can also made amalgamate classes. example rich medium features combined low left alone. 2 vectors added list, outputs 2 classes (low & rich/medium).  notice details parameter present . returns output outRaster, $lookUp table associated strata, polygon ($poly) created drive stratification based attribute features provided users.","code":"#--- load in polygon coverage ---# poly <- system.file(\"extdata\", \"inventory_polygons.shp\", package = \"sgsR\")  fri <- sf::st_read(poly) #> Reading layer `inventory_polygons' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\inventory_polygons.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 632 features and 3 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere #--- stratify polygon coverage ---# #--- specify polygon attribute to stratify ---#  attribute <- \"NUTRIENTS\"  #--- specify features within attribute & how they should be grouped ---# #--- as a single vector ---#  features <- c(\"poor\", \"rich\", \"medium\")  srasterpoly <- strat_poly(poly = fri, # input polygon                           attribute = attribute, # attribute to stratify by                           features = features, # features within attribute                           raster = sraster, # raster to define extent and resolution for output                           plot = TRUE) # plot output #--- or as multiple lists ---# g1 <- \"poor\" g2 <- c(\"rich\", \"medium\")  features <- list(g1, g2)  strat_poly(poly = fri,            attribute = attribute,            features = features,            raster = sraster,            plot = TRUE,            details = TRUE) #> $outRaster #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      2  #>  #> $lookUp #>   strata features #> 1      1     poor #> 2      2     rich #> 3      2   medium #>  #> $poly #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 524, 2  (geometries, attributes) #>  extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #>  coord. ref. : UTM_Zone_17_Northern_Hemisphere  #>  names       : NUTRIENTS strata #>  type        :     <chr>  <num> #>  values      :      poor      1 #>                     poor      1 #>                     poor      1"},{"path":"/articles/stratification.html","id":"strat_map","dir":"Articles","previous_headings":"","what":"strat_map","title":"stratification","text":"may instance multiple levels stratification desired. instance user may want combine output strat_poly() 3 classes, 4 class kmeans stratification kmeans. total number classes always multiplicative number strata. .e. sraster 3 strata sraster2 4 strata output strat_map() 12 strata total.  convention numeric value output strata concatenation (merging) sraster strata sraster2 strata. See $lookUp clear depiction .","code":"#--- map srasters ---# strat_map(sraster = srasterpoly, # strat_poly 3 class stratification           sraster2 = sraster, # strat_kmeans 4 class stratification           plot = TRUE) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :     11  #> max value   :     34 strat_map(sraster = srasterpoly, # strat_poly 3 class stratification           sraster2 = sraster, # strat_poly 3 class stratification           stack = TRUE, # stack input and oputput strata into multi layer ouput raster           details = TRUE, # provide additional details           plot = TRUE) # plot output #> Stacking sraster, sraster2, and their combination (stratamapped). #> $outRaster #> class       : SpatRaster  #> dimensions  : 277, 373, 3  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : memory   #>               memory   #>               memory   #> names       : strata, strata2, stratamapped  #> min values  :      1,       1,           11  #> max values  :      3,       4,           34  #>  #> $lookUp #>    strata strata2 stratamapped #> 1       3       4           34 #> 2       3       2           32 #> 3       3       1           31 #> 4       1       1           11 #> 5       1       3           13 #> 6       3       3           33 #> 7       1       4           14 #> 8       1       2           12 #> 9       2       4           24 #> 10      2       1           21 #> 11      2       3           23 #> 12      2       2           22"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tristan RH Goodbody. Author, maintainer. Nicholas C Coops. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tristan RH Goodbody Nicholas C Coops (2022). Structurally Guided Sampling Approaches using ALS Data. R package version 1.0.0. https://github.com/tgoodbody/sgsR","code":"@Manual{,   title = {Structurally Guided Sampling Approaches using ALS Data},   author = {Tristan RH Goodbody and Nicholas C Coops},   year = {2022},   note = {R package version 1.0.0},   url = {https://github.com/tgoodbody/sgsR}, }"},{"path":"/index.html","id":"sgsr---structurally-guided-sampling-","dir":"","previous_headings":"","what":"sgsR","title":"sgsR","text":"sgsR designed implement structurally guided sampling approaches enhanced forest inventories. package designed function using rasterized airborne laser scanning (ALS; Lidar) metrics allow stratification forested areas based structure.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"sgsR","text":"can install released version sgsR Github :","code":"install.packages(\"devtools\") devtools::install_github(\"https://github.com/tgoodbody/sgsR\") library(sgsR)"},{"path":"/index.html","id":"implementation","dir":"","previous_headings":"","what":"Implementation","title":"sgsR","text":"Describe package fundamentals - vignette(\"sgsR\") Overview sampling algorithms - vignette(\"sampling\") Overview stratification algorithms - vignette(\"stratification\") Overview calculate algorithms - vignette(\"calculating\")","code":""},{"path":"/index.html","id":"collaborators","dir":"","previous_headings":"","what":"Collaborators","title":"sgsR","text":"thankful continued collaboration academic, private industry, government institutions help improve sgsR. Special thanks :","code":""},{"path":"/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"sgsR","text":"Development sgsR made possible thanks financial support Canadian Wood Fibre Centre’s Forest Innovation Program.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/reference/calculate_ahels.html","id":null,"dir":"Reference","previous_headings":"","what":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"Perform adapted Hypercube Evaluation Legacy Sample (ahels) algorithm using existing site data raster metrics. New samples allocated based quantile ratios existing sample covariate dataset.","code":""},{"path":"/reference/calculate_ahels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"","code":"calculate_ahels(   mraster,   existing,   nQuant = 10,   nSamp = NULL,   threshold = 0.9,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/calculate_ahels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"mraster spatRaster. ALS metrics raster. existing sf. Samples resulting sample_* functions. nQuant Numeric. Number quantiles divide covariates samples . Quantiles cover least 1 percent area interest excluded returned NA. nSamp Numeric. Maximum number new samples allocate. provided, algorithm default allocating number samples provided. threshold Numeric. sample quantile ratio threshold establishing whether additional samples added. default = 0.9. Values close 1 can cause algorithm continually loop used sparingly. plot Logial. Plots existing (circles) new (crosses) samples first band mraster. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc.","code":""},{"path":"/reference/calculate_ahels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"Returns sf point object existing samples supplemental samples added ahels algorithm.","code":""},{"path":"/reference/calculate_ahels.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"Special thanks Dr. Brendan Malone original implementation algorithm.","code":""},{"path":"/reference/calculate_ahels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":[]},{"path":"/reference/calculate_ahels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_ahels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"","code":"#--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  calculate_ahels(   mraster = mr[[1:3]],   existing = e,   plot = TRUE ) #> Error in calculate_ahels(mraster = mr[[1:3]], existing = e, plot = TRUE): could not find function \"calculate_ahels\"  calculate_ahels(   mraster = mr[[1:3]],   existing = e,   nQuant = 20,   nSamp = 300,   filename = tempfile(fileext = \".shp\") ) #> Error in calculate_ahels(mraster = mr[[1:3]], existing = e, nQuant = 20,     nSamp = 300, filename = tempfile(fileext = \".shp\")): could not find function \"calculate_ahels\""},{"path":"/reference/calculate_allocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine required samples in strata — calculate_allocation","title":"Determine required samples in strata — calculate_allocation","text":"Determine required samples strata","code":""},{"path":"/reference/calculate_allocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine required samples in strata — calculate_allocation","text":"","code":"calculate_allocation(   sraster,   nSamp,   allocation = \"prop\",   mraster = NULL,   existing = NULL,   force = FALSE )"},{"path":"/reference/calculate_allocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine required samples in strata — calculate_allocation","text":"sraster spatRaster. Stratification raster used sampling. nSamp Numeric. Number desired samples. allocation Character. Allocation algorithm used. Either prop (default) proportional allocation optim optimal allocation (equal sampling cost) equal equal number samples (defined nSamp)  strata. mraster spatRaster. ALS metric raster. Required allocation = optim. existing sf data.frame.  Existing plot network. force Logical. Default = FALSE - force nSamp exactly user defined value cases nSamp sraster strata count equally divisible. effect existing provided.","code":""},{"path":"/reference/calculate_allocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine required samples in strata — calculate_allocation","text":"data.frame : strata - Strata ID. total - Total samples allocated (positive) removed (negative). need - Total required samples per strata.","code":""},{"path":"/reference/calculate_allocation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine required samples in strata — calculate_allocation","text":"Determine many samples allocate within strata","code":""},{"path":"/reference/calculate_allocation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determine required samples in strata — calculate_allocation","text":"Gregoire, T.G., & Valentine, H.T. (2007). Sampling Strategies Natural Resources Environment (1st ed.).  Chapman Hall/CRC. https://doi.org/10.1201/9780203498880","code":""},{"path":[]},{"path":"/reference/calculate_allocation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine required samples in strata — calculate_allocation","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_allocation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine required samples in strata — calculate_allocation","text":"","code":"#--- Load strata raster and existing samples---# r <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sr <- terra::rast(r)  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  #--- perform grid sampling ---# calculate_allocation(   sraster = sr,   nSamp = 200 ) #> Implementing porportional allocation of samples #> nSamp of 200 is not perfectly divisible based on strata distribution. nSamp of 199 will be returned. Use \"force = TRUE\" to brute force to 200. #>    strata total #> 1       1    13 #> 2       2    29 #> 3       3    14 #> 4       4    21 #> 5       5    25 #> 6       6    24 #> 7       7    24 #> 8       8    16 #> 9       9    23 #> 10     10    10  calculate_allocation(   sraster = sr,   nSamp = 200,   force = TRUE ) #> Implementing porportional allocation of samples #> Forcing 200 total samples. #>    strata total #> 1       1    13 #> 2       2    29 #> 3       3    14 #> 4       4    21 #> 5       5    25 #> 6       6    24 #> 7       7    24 #> 8       8    16 #> 9       9    23 #> 10     10    11  #--- extract strata from existing samples ---# e.sr <- extract_strata(   sraster = sr,   existing = e )  calculate_allocation(   sraster = sr,   nSamp = 200,   existing = e.sr ) #> Implementing porportional allocation of samples #> nSamp of 200 is not perfectly divisible based on strata distribution. nSamp of 199 will be returned. Use \"force = TRUE\" to brute force to 200. #>    strata total need #> 1       1    11   13 #> 2       2    15   29 #> 3       3     2   14 #> 4       4    10   21 #> 5       5    10   25 #> 6       6    10   24 #> 7       7    12   24 #> 8       8     3   16 #> 9       9    18   23 #> 10     10     8   10  #--- Load mraster for optimal allocation ---# mr <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(mr)  calculate_allocation(   sraster = sr,   nSamp = 200,   existing = e.sr,   allocation = \"optim\",   mraster = mr$zq90,   force = TRUE ) #> Implementing optimal allocation of samples based on variability of 'zq90' #> Forcing 200 total samples. #>    strata total need #> 1       1    15   17 #> 2       2    17   31 #> 3       3     3   14 #> 4       4     6   17 #> 5       5     4   19 #> 6       6     7   21 #> 7       7    11   23 #> 8       8    10   23 #> 9       9    16   21 #> 10     10    11   13"},{"path":"/reference/calculate_coobs.html","id":null,"dir":"Reference","previous_headings":"","what":"coobs algorithm sampling — calculate_coobs","title":"coobs algorithm sampling — calculate_coobs","text":"Perform COunt OBServations (coobs) algorithm using existing site data raster metrics. algorithm aids user determining additional samples located comparing existing samples pixel associated covariates. output coobs raster used constrain clhs sampling areas underreprented.","code":""},{"path":"/reference/calculate_coobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"coobs algorithm sampling — calculate_coobs","text":"","code":"calculate_coobs(   mraster,   existing,   cores = 1,   threshold = 0.95,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/calculate_coobs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"coobs algorithm sampling — calculate_coobs","text":"mraster spatRaster. ALS metrics raster. Requires least 2 layers calculate covariance matrix existing sf. Samples resulting sample_* functions. cores Numeric. Number cores use parallel processing. default = 1 threshold Numeric. Proxy maximum pixel quantile avoid outliers. default = 0.95 plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc.","code":""},{"path":"/reference/calculate_coobs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"coobs algorithm sampling — calculate_coobs","text":"output raster coobs classified coobs layers.","code":""},{"path":"/reference/calculate_coobs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"coobs algorithm sampling — calculate_coobs","text":"Special thanks Dr. Brendan Malone original implementation algorithm.","code":""},{"path":"/reference/calculate_coobs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"coobs algorithm sampling — calculate_coobs","text":"Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":[]},{"path":"/reference/calculate_coobs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"coobs algorithm sampling — calculate_coobs","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_coobs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"coobs algorithm sampling — calculate_coobs","text":"","code":"if (FALSE) { #--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e)  calculate_coobs(   mraster = mr,   existing = e,   cores = 4,   details = TRUE,   filename = tempfile(fileext = \".tif\") ) }"},{"path":"/reference/calculate_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance to access layer — calculate_distance","title":"Distance to access layer — calculate_distance","text":"Per pixel distance nearest access vector. Intended used `cost` constraint within sample_clhs function","code":""},{"path":"/reference/calculate_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance to access layer — calculate_distance","text":"","code":"calculate_distance(   raster,   access,   plot = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/calculate_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance to access layer — calculate_distance","text":"raster spatRaster. Raster used calculate pixel level distance access layer. access sf. Road access network - must lines. plot Logical. Plots output strata raster samples. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists.","code":""},{"path":"/reference/calculate_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance to access layer — calculate_distance","text":"Input raster dist2access layer appended.","code":""},{"path":[]},{"path":"/reference/calculate_distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Distance to access layer — calculate_distance","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance to access layer — calculate_distance","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sr <- terra::rast(r)  a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\") ac <- sf::st_read(a) #> Reading layer `roads' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\roads.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 167 features and 2 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  calculate_distance(   raster = sr,   access = ac,   plot = TRUE ) #> calculating per pixel distance to provided access layer #> class       : SpatRaster  #> dimensions  : 277, 373, 2  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : kmeans.tif   #>               memory   #> names       :      strata, dist2access  #> min values  : 1.000000000, 0.006621213  #> max values  :       10.00,     1061.66   calculate_distance(   raster = sr,   access = ac,   plot = TRUE,   filename = tempfile(fileext = \".tif\") ) #> calculating per pixel distance to provided access layer  #> class       : SpatRaster  #> dimensions  : 277, 373, 2  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : kmeans.tif   #>               memory   #> names       :      strata, dist2access  #> min values  : 1.000000000, 0.006621213  #> max values  :       10.00,     1061.66"},{"path":"/reference/calculate_lhsOpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"Population level analysis metric raster data determine optimal Latin Hypercube sample size","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"","code":"calculate_lhsOpt(   popLHS,   PCA = TRUE,   quant = TRUE,   KLdiv = TRUE,   minSamp = 10,   maxSamp = 100,   step = 10,   rep = 10,   iter = 10000 )"},{"path":"/reference/calculate_lhsOpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"popLHS List. Output calculate_lhsPop function. PCA Logical. Calculates principal component loadings population PCA similarity factor testing. default = TRUE. quant Logical. Calculates quantile matrix population quantile comparison testing. default = TRUE. KLdiv Logical. Calculates covariate matrix population Kullback–Leibler divergence testing. default = TRUE. Relies quant = TRUE calculate. minSamp Numeric. Minimum sample size test. default = 10. maxSamp Numeric. Maximum sample size test. default = 100. step Numeric. Sample step size iteration. default = 10. rep Numeric. Internal repetitions sample size. default = 10. iter Numeric. Internal clhs - positive number, giving number iterations Metropolis-Hastings annealing process. Defaults 10000.","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"data.frame summary statistics.","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"Special thanks Dr. Brendan Malone original implementation algorithm.","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"","code":"if (FALSE) { #--- Load raster and access files ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  #--- calculate lhsPop details ---# poplhs <- calculate_lhsPop(mraster = mr)  calculate_lhsOpt(popLHS = poplhs)  calculate_lhsOpt(   popLHS = poplhs,   PCA = FALSE,   iter = 200 ) }"},{"path":"/reference/calculate_lhsPop.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze covariates for lhs — calculate_lhsPop","title":"Analyze covariates for lhs — calculate_lhsPop","text":"Population level analysis metric raster data Calculates population level statistics including principal components, quantile matrix, Kullback-leibler  divergence neccesary calculate_lhsOpt.","code":""},{"path":"/reference/calculate_lhsPop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze covariates for lhs — calculate_lhsPop","text":"","code":"calculate_lhsPop(mraster, PCA = TRUE, quant = TRUE, nQuant = 10, KLdiv = TRUE)"},{"path":"/reference/calculate_lhsPop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze covariates for lhs — calculate_lhsPop","text":"mraster spatRaster. ALS metrics raster. PCA Logical. Calculates principal component loadings population PCA similarity factor testing. default = TRUE. quant Logical. Calculates quantile matrix population quantile comparison testing. default = TRUE. nQuant Numeric. Number quantiles divide population quant. default = 10. KLdiv Logical. Calculates covariate matrix population Kullback–Leibler divergence testing. default = TRUE. Relies quant = TRUE calculate.","code":""},{"path":"/reference/calculate_lhsPop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze covariates for lhs — calculate_lhsPop","text":"List matrices used input calculate_lhsOpt.","code":""},{"path":"/reference/calculate_lhsPop.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Analyze covariates for lhs — calculate_lhsPop","text":"Special thanks Dr. Brendan Malone original implementation algorithm.","code":""},{"path":"/reference/calculate_lhsPop.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analyze covariates for lhs — calculate_lhsPop","text":"Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":[]},{"path":"/reference/calculate_lhsPop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analyze covariates for lhs — calculate_lhsPop","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_lhsPop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze covariates for lhs — calculate_lhsPop","text":"","code":"if (FALSE) { #--- Load raster and access files ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  calculate_lhsPop(mraster = mr)  calculate_lhsPop(   mraster = mr,   nQuant = 10,   PCA = FALSE ) }"},{"path":"/reference/calculate_pcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster principal components — calculate_pcomp","title":"Raster principal components — calculate_pcomp","text":"Calculate rasterize principal components metric raster","code":""},{"path":"/reference/calculate_pcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster principal components — calculate_pcomp","text":"","code":"calculate_pcomp(   mraster,   nComp,   center = TRUE,   scale = TRUE,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/calculate_pcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster principal components — calculate_pcomp","text":"mraster spatRaster. ALS metrics raster. nComp Numeric. Value indicating number principal components rasterized. prior analysis. center Logical. Value indicating whether variables shifted zero centered. scale Logical. Value indicating whether variables scaled unit variance plot Logical. Plots output strata raster samples. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists. ... Additional arguments passed prcomp.","code":""},{"path":"/reference/calculate_pcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster principal components — calculate_pcomp","text":"Output raster specified number principal components layers.","code":""},{"path":[]},{"path":"/reference/calculate_pcomp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Raster principal components — calculate_pcomp","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_pcomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raster principal components — calculate_pcomp","text":"","code":"#--- Load raster ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  calculate_pcomp(   mraster = mr,   nComp = 5,   plot = TRUE )  #> class       : SpatRaster  #> dimensions  : 277, 373, 5  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : memory   #>               memory   #>               memory   #>               ... and 2 more source(s) #> names       :        PC1,        PC2,        PC3,        PC4,        PC5  #> min values  :  -6.675657, -14.741405,  -1.735068,  -9.384677,  -1.272558  #> max values  :  13.828171,   4.197435,   4.022076,   1.821104,   2.243303   pcomp <- calculate_pcomp(            mraster = mr,            nComp = 3,            details = TRUE          )  #--- Display principal component details ---# pcomp$pca #> Standard deviations (1, .., p=9): #> [1] 2.66328897 1.09805898 0.66339469 0.41858538 0.22109594 0.14478794 #> [7] 0.09669328 0.07739106 0.02581106 #>  #> Rotation (n x k) = (9 x 9): #>                PC1         PC2         PC3         PC4         PC5 #> zmax     0.3718561  0.05890652  0.13655303  0.18644188 -0.02967021 #> zmean    0.2892076  0.11179079 -0.94037185  0.11669464 -0.01101177 #> zsd      0.2902484 -0.57132611  0.07358411 -0.03485495 -0.12710815 #> pzabove2 0.2762415  0.57389014  0.11046261 -0.48982874 -0.53278380 #> zq20     0.3222793  0.42913513  0.17765055  0.04688184  0.69772164 #> zq50     0.3621931  0.06711670  0.16260903  0.50497308 -0.03554264 #> zq70     0.3669446 -0.07622676  0.13483825  0.33474905 -0.33679147 #> zq90     0.3576125 -0.24286784  0.04467110 -0.28486752  0.00494469 #> zq95     0.3463317 -0.27351876 -0.03548477 -0.50997312  0.31217248 #>                   PC6          PC7         PC8          PC9 #> zmax     -0.022902433  0.058181544  0.12813760 -0.885232514 #> zmean     0.061423536  0.005559276 -0.04493042  0.001085691 #> zsd       0.373461072 -0.062831197 -0.65029797 -0.015746780 #> pzabove2  0.007219003  0.005909104 -0.23569527  0.052045306 #> zq20      0.371793616 -0.128585416 -0.12943905  0.141020587 #> zq50     -0.525190662  0.398814446 -0.24627692  0.293390931 #> zq70      0.136444231 -0.587797301  0.42249155  0.270652072 #> zq90      0.287643242  0.607152727  0.49439800  0.184814994 #> zq95     -0.583751620 -0.320739852  0.05279230  0.005601089  #--- Display importance of components ---# summary(pcomp$pca) #> Importance of components: #>                           PC1    PC2    PC3     PC4     PC5     PC6 #> Standard deviation     2.6633 1.0981 0.6634 0.41859 0.22110 0.14479 #> Proportion of Variance 0.7881 0.1340 0.0489 0.01947 0.00543 0.00233 #> Cumulative Proportion  0.7881 0.9221 0.9710 0.99046 0.99589 0.99822 #>                            PC7     PC8     PC9 #> Standard deviation     0.09669 0.07739 0.02581 #> Proportion of Variance 0.00104 0.00067 0.00007 #> Cumulative Proportion  0.99926 0.99993 1.00000"},{"path":"/reference/calculate_sampsize.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample size determination — calculate_sampsize","title":"Sample size determination — calculate_sampsize","text":"Determine samples size simple random sampling using relative standard error","code":""},{"path":"/reference/calculate_sampsize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample size determination — calculate_sampsize","text":"","code":"calculate_sampsize(   mraster,   rse = NULL,   start = 0.01,   end = 0.05,   increment = 0.001,   plot = FALSE )"},{"path":"/reference/calculate_sampsize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample size determination — calculate_sampsize","text":"mraster spatRaster. Metrics raster. values must numeric. rse Numeric. Desired relative standard error (coefficient variation mean) threshold determine sample size. start Numeric. First rse value begin rse sequence. default = 0.01. end Numeric. Final rse value end rse sequence. default = 0.05. increment Numeric. Value increment start & end. default = 0.001. plot Logical. TRUE output graphical representation estimated sample size vs. rse.","code":""},{"path":"/reference/calculate_sampsize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample size determination — calculate_sampsize","text":"data.frame sample size rse raster variable.","code":""},{"path":"/reference/calculate_sampsize.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample size determination — calculate_sampsize","text":"$$rse = (100 * SE) / mean)$$ : SE - Standard error mean s - Standard deviation observations n - Number observations","code":""},{"path":"/reference/calculate_sampsize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample size determination — calculate_sampsize","text":"Benedetti, R., Piersimoni, F., & Postiglione, P. (2015).  Sampling spatial units agricultural surveys. pp 202-203. Berlin: Springer.","code":""},{"path":[]},{"path":"/reference/calculate_sampsize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample size determination — calculate_sampsize","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_sampsize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample size determination — calculate_sampsize","text":"","code":"#--- Load raster ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  calculate_sampsize(mraster = mr,                    rse = 0.01,                    plot = TRUE) #> $nSamp #>   nSamp  rse      var #> 1  2030 0.01     zmax #> 2  1341 0.01    zmean #> 3  1862 0.01      zsd #> 4  4091 0.01 pzabove2 #> 5  3647 0.01     zq20 #> 6  2581 0.01     zq50 #> 7  2110 0.01     zq70 #> 8  1396 0.01     zq90 #> 9  1134 0.01     zq95 #>  #> $plot  #>                      calculate_sampsize(mraster = mr,                    plot = TRUE) #> $nSamp #>     nSamp   rse      var #> 1    2030 0.010     zmax #> 2    1684 0.011     zmax #> 3    1419 0.012     zmax #> 4    1212 0.013     zmax #> 5    1047 0.014     zmax #> 6     914 0.015     zmax #> 7     804 0.016     zmax #> 8     713 0.017     zmax #> 9     637 0.018     zmax #> 10    572 0.019     zmax #> 11    516 0.020     zmax #> 12    469 0.021     zmax #> 13    427 0.022     zmax #> 14    391 0.023     zmax #> 15    359 0.024     zmax #> 16    331 0.025     zmax #> 17    306 0.026     zmax #> 18    284 0.027     zmax #> 19    264 0.028     zmax #> 20    247 0.029     zmax #> 21    230 0.030     zmax #> 22    216 0.031     zmax #> 23    203 0.032     zmax #> 24    191 0.033     zmax #> 25    180 0.034     zmax #> 26    170 0.035     zmax #> 27    160 0.036     zmax #> 28    152 0.037     zmax #> 29    144 0.038     zmax #> 30    137 0.039     zmax #> 31    130 0.040     zmax #> 32    124 0.041     zmax #> 33    118 0.042     zmax #> 34    113 0.043     zmax #> 35    108 0.044     zmax #> 36    103 0.045     zmax #> 37     98 0.046     zmax #> 38     94 0.047     zmax #> 39     90 0.048     zmax #> 40     87 0.049     zmax #> 41     83 0.050     zmax #> 42   1341 0.010    zmean #> 43   1111 0.011    zmean #> 44    935 0.012    zmean #> 45    798 0.013    zmean #> 46    689 0.014    zmean #> 47    601 0.015    zmean #> 48    529 0.016    zmean #> 49    469 0.017    zmean #> 50    418 0.018    zmean #> 51    376 0.019    zmean #> 52    339 0.020    zmean #> 53    308 0.021    zmean #> 54    281 0.022    zmean #> 55    257 0.023    zmean #> 56    236 0.024    zmean #> 57    218 0.025    zmean #> 58    201 0.026    zmean #> 59    187 0.027    zmean #> 60    174 0.028    zmean #> 61    162 0.029    zmean #> 62    151 0.030    zmean #> 63    142 0.031    zmean #> 64    133 0.032    zmean #> 65    125 0.033    zmean #> 66    118 0.034    zmean #> 67    111 0.035    zmean #> 68    105 0.036    zmean #> 69    100 0.037    zmean #> 70     95 0.038    zmean #> 71     90 0.039    zmean #> 72     85 0.040    zmean #> 73     81 0.041    zmean #> 74     78 0.042    zmean #> 75     74 0.043    zmean #> 76     71 0.044    zmean #> 77     68 0.045    zmean #> 78     65 0.046    zmean #> 79     62 0.047    zmean #> 80     59 0.048    zmean #> 81     57 0.049    zmean #> 82     55 0.050    zmean #> 83   1862 0.010      zsd #> 84   1545 0.011      zsd #> 85   1302 0.012      zsd #> 86   1111 0.013      zsd #> 87    960 0.014      zsd #> 88    837 0.015      zsd #> 89    737 0.016      zsd #> 90    653 0.017      zsd #> 91    583 0.018      zsd #> 92    524 0.019      zsd #> 93    473 0.020      zsd #> 94    429 0.021      zsd #> 95    392 0.022      zsd #> 96    358 0.023      zsd #> 97    329 0.024      zsd #> 98    304 0.025      zsd #> 99    281 0.026      zsd #> 100   260 0.027      zsd #> 101   242 0.028      zsd #> 102   226 0.029      zsd #> 103   211 0.030      zsd #> 104   198 0.031      zsd #> 105   186 0.032      zsd #> 106   175 0.033      zsd #> 107   165 0.034      zsd #> 108   155 0.035      zsd #> 109   147 0.036      zsd #> 110   139 0.037      zsd #> 111   132 0.038      zsd #> 112   125 0.039      zsd #> 113   119 0.040      zsd #> 114   113 0.041      zsd #> 115   108 0.042      zsd #> 116   103 0.043      zsd #> 117    99 0.044      zsd #> 118    94 0.045      zsd #> 119    90 0.046      zsd #> 120    86 0.047      zsd #> 121    83 0.048      zsd #> 122    80 0.049      zsd #> 123    76 0.050      zsd #> 124  4091 0.010 pzabove2 #> 125  3408 0.011 pzabove2 #> 126  2881 0.012 pzabove2 #> 127  2466 0.013 pzabove2 #> 128  2134 0.014 pzabove2 #> 129  1865 0.015 pzabove2 #> 130  1643 0.016 pzabove2 #> 131  1459 0.017 pzabove2 #> 132  1303 0.018 pzabove2 #> 133  1172 0.019 pzabove2 #> 134  1059 0.020 pzabove2 #> 135   961 0.021 pzabove2 #> 136   877 0.022 pzabove2 #> 137   803 0.023 pzabove2 #> 138   738 0.024 pzabove2 #> 139   681 0.025 pzabove2 #> 140   630 0.026 pzabove2 #> 141   584 0.027 pzabove2 #> 142   543 0.028 pzabove2 #> 143   507 0.029 pzabove2 #> 144   474 0.030 pzabove2 #> 145   444 0.031 pzabove2 #> 146   417 0.032 pzabove2 #> 147   392 0.033 pzabove2 #> 148   369 0.034 pzabove2 #> 149   349 0.035 pzabove2 #> 150   330 0.036 pzabove2 #> 151   312 0.037 pzabove2 #> 152   296 0.038 pzabove2 #> 153   281 0.039 pzabove2 #> 154   267 0.040 pzabove2 #> 155   255 0.041 pzabove2 #> 156   243 0.042 pzabove2 #> 157   232 0.043 pzabove2 #> 158   221 0.044 pzabove2 #> 159   211 0.045 pzabove2 #> 160   202 0.046 pzabove2 #> 161   194 0.047 pzabove2 #> 162   186 0.048 pzabove2 #> 163   179 0.049 pzabove2 #> 164   171 0.050 pzabove2 #> 165  3647 0.010     zq20 #> 166  3035 0.011     zq20 #> 167  2564 0.012     zq20 #> 168  2194 0.013     zq20 #> 169  1898 0.014     zq20 #> 170  1658 0.015     zq20 #> 171  1460 0.016     zq20 #> 172  1296 0.017     zq20 #> 173  1158 0.018     zq20 #> 174  1041 0.019     zq20 #> 175   940 0.020     zq20 #> 176   854 0.021     zq20 #> 177   779 0.022     zq20 #> 178   713 0.023     zq20 #> 179   655 0.024     zq20 #> 180   604 0.025     zq20 #> 181   559 0.026     zq20 #> 182   519 0.027     zq20 #> 183   482 0.028     zq20 #> 184   450 0.029     zq20 #> 185   421 0.030     zq20 #> 186   394 0.031     zq20 #> 187   370 0.032     zq20 #> 188   348 0.033     zq20 #> 189   328 0.034     zq20 #> 190   310 0.035     zq20 #> 191   293 0.036     zq20 #> 192   277 0.037     zq20 #> 193   263 0.038     zq20 #> 194   250 0.039     zq20 #> 195   237 0.040     zq20 #> 196   226 0.041     zq20 #> 197   215 0.042     zq20 #> 198   205 0.043     zq20 #> 199   196 0.044     zq20 #> 200   188 0.045     zq20 #> 201   180 0.046     zq20 #> 202   172 0.047     zq20 #> 203   165 0.048     zq20 #> 204   158 0.049     zq20 #> 205   152 0.050     zq20 #> 206  2581 0.010     zq50 #> 207  2144 0.011     zq50 #> 208  1808 0.012     zq50 #> 209  1546 0.013     zq50 #> 210  1336 0.014     zq50 #> 211  1166 0.015     zq50 #> 212  1026 0.016     zq50 #> 213   910 0.017     zq50 #> 214   813 0.018     zq50 #> 215   730 0.019     zq50 #> 216   660 0.020     zq50 #> 217   599 0.021     zq50 #> 218   546 0.022     zq50 #> 219   500 0.023     zq50 #> 220   459 0.024     zq50 #> 221   424 0.025     zq50 #> 222   392 0.026     zq50 #> 223   363 0.027     zq50 #> 224   338 0.028     zq50 #> 225   315 0.029     zq50 #> 226   295 0.030     zq50 #> 227   276 0.031     zq50 #> 228   259 0.032     zq50 #> 229   244 0.033     zq50 #> 230   230 0.034     zq50 #> 231   217 0.035     zq50 #> 232   205 0.036     zq50 #> 233   194 0.037     zq50 #> 234   184 0.038     zq50 #> 235   175 0.039     zq50 #> 236   166 0.040     zq50 #> 237   158 0.041     zq50 #> 238   151 0.042     zq50 #> 239   144 0.043     zq50 #> 240   137 0.044     zq50 #> 241   131 0.045     zq50 #> 242   126 0.046     zq50 #> 243   121 0.047     zq50 #> 244   116 0.048     zq50 #> 245   111 0.049     zq50 #> 246   107 0.050     zq50 #> 247  2110 0.010     zq70 #> 248  1751 0.011     zq70 #> 249  1476 0.012     zq70 #> 250  1261 0.013     zq70 #> 251  1089 0.014     zq70 #> 252   950 0.015     zq70 #> 253   836 0.016     zq70 #> 254   742 0.017     zq70 #> 255   662 0.018     zq70 #> 256   595 0.019     zq70 #> 257   537 0.020     zq70 #> 258   488 0.021     zq70 #> 259   445 0.022     zq70 #> 260   407 0.023     zq70 #> 261   374 0.024     zq70 #> 262   345 0.025     zq70 #> 263   319 0.026     zq70 #> 264   296 0.027     zq70 #> 265   275 0.028     zq70 #> 266   257 0.029     zq70 #> 267   240 0.030     zq70 #> 268   225 0.031     zq70 #> 269   211 0.032     zq70 #> 270   198 0.033     zq70 #> 271   187 0.034     zq70 #> 272   176 0.035     zq70 #> 273   167 0.036     zq70 #> 274   158 0.037     zq70 #> 275   150 0.038     zq70 #> 276   142 0.039     zq70 #> 277   135 0.040     zq70 #> 278   129 0.041     zq70 #> 279   123 0.042     zq70 #> 280   117 0.043     zq70 #> 281   112 0.044     zq70 #> 282   107 0.045     zq70 #> 283   102 0.046     zq70 #> 284    98 0.047     zq70 #> 285    94 0.048     zq70 #> 286    90 0.049     zq70 #> 287    87 0.050     zq70 #> 288  1396 0.010     zq90 #> 289  1157 0.011     zq90 #> 290   974 0.012     zq90 #> 291   832 0.013     zq90 #> 292   718 0.014     zq90 #> 293   626 0.015     zq90 #> 294   551 0.016     zq90 #> 295   488 0.017     zq90 #> 296   436 0.018     zq90 #> 297   391 0.019     zq90 #> 298   353 0.020     zq90 #> 299   321 0.021     zq90 #> 300   292 0.022     zq90 #> 301   268 0.023     zq90 #> 302   246 0.024     zq90 #> 303   227 0.025     zq90 #> 304   210 0.026     zq90 #> 305   195 0.027     zq90 #> 306   181 0.028     zq90 #> 307   169 0.029     zq90 #> 308   158 0.030     zq90 #> 309   148 0.031     zq90 #> 310   139 0.032     zq90 #> 311   130 0.033     zq90 #> 312   123 0.034     zq90 #> 313   116 0.035     zq90 #> 314   110 0.036     zq90 #> 315   104 0.037     zq90 #> 316    99 0.038     zq90 #> 317    94 0.039     zq90 #> 318    89 0.040     zq90 #> 319    85 0.041     zq90 #> 320    81 0.042     zq90 #> 321    77 0.043     zq90 #> 322    74 0.044     zq90 #> 323    70 0.045     zq90 #> 324    67 0.046     zq90 #> 325    65 0.047     zq90 #> 326    62 0.048     zq90 #> 327    59 0.049     zq90 #> 328    57 0.050     zq90 #> 329  1134 0.010     zq95 #> 330   940 0.011     zq95 #> 331   791 0.012     zq95 #> 332   675 0.013     zq95 #> 333   583 0.014     zq95 #> 334   508 0.015     zq95 #> 335   447 0.016     zq95 #> 336   396 0.017     zq95 #> 337   354 0.018     zq95 #> 338   317 0.019     zq95 #> 339   287 0.020     zq95 #> 340   260 0.021     zq95 #> 341   237 0.022     zq95 #> 342   217 0.023     zq95 #> 343   199 0.024     zq95 #> 344   184 0.025     zq95 #> 345   170 0.026     zq95 #> 346   158 0.027     zq95 #> 347   147 0.028     zq95 #> 348   137 0.029     zq95 #> 349   128 0.030     zq95 #> 350   120 0.031     zq95 #> 351   112 0.032     zq95 #> 352   106 0.033     zq95 #> 353   100 0.034     zq95 #> 354    94 0.035     zq95 #> 355    89 0.036     zq95 #> 356    84 0.037     zq95 #> 357    80 0.038     zq95 #> 358    76 0.039     zq95 #> 359    72 0.040     zq95 #> 360    69 0.041     zq95 #> 361    66 0.042     zq95 #> 362    63 0.043     zq95 #> 363    60 0.044     zq95 #> 364    57 0.045     zq95 #> 365    55 0.046     zq95 #> 366    52 0.047     zq95 #> 367    50 0.048     zq95 #> 368    48 0.049     zq95 #> 369    46 0.050     zq95 #>  #> $plot  #>                      calculate_sampsize(mraster = mr,                    rse = 0.025,                    start = 0.01,                    end = 0.08,                    increment = 0.01,                    plot = TRUE) #> 'rse' not perfectly divisible by 'incremenent.  #> Selecting closest sample size (rse = 0.03) based on values. #> $nSamp #> # A tibble: 9 x 3 #> # Groups:   var [9] #>   nSamp   rse var      #>   <dbl> <dbl> <chr>    #> 1   230  0.03 zmax     #> 2   151  0.03 zmean    #> 3   211  0.03 zsd      #> 4   474  0.03 pzabove2 #> 5   421  0.03 zq20     #> 6   295  0.03 zq50     #> 7   240  0.03 zq70     #> 8   158  0.03 zq90     #> 9   128  0.03 zq95     #>  #> $plot  #>                      #--- higher variance leads to need for more samples ---#"},{"path":"/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract — extract","title":"Extract — extract","text":"Extract raster values samples Extract metric raster attributes existing","code":""},{"path":"/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract — extract","text":"","code":"extract_strata(   sraster,   existing,   data.frame = FALSE,   filename = NULL,   overwrite = FALSE )  extract_metrics(   mraster,   existing,   data.frame = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract — extract","text":"sraster spatRaster. Stratification raster. existing sf. Samples resulting sample_* functions. data.frame Logical. true outputs data.frame filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. mraster Spatraster. Primary covariate raster stratify.","code":""},{"path":"/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract — extract","text":"sf data.frame object samples strata attributes sf data.frame object samples associated raster cell attributes","code":""},{"path":"/reference/masking.html","id":null,"dir":"Reference","previous_headings":"","what":"Masking — masking","title":"Masking — masking","text":"Create covariate sample matrices","code":""},{"path":"/reference/masking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Masking — masking","text":"","code":"mask_access(raster, access, buff_inner, buff_outer)"},{"path":"/reference/masking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Masking — masking","text":"raster SpatRaster. Raster masked. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled.","code":""},{"path":"/reference/matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrices — matrices","title":"Matrices — matrices","text":"Create covariate sample matrices","code":""},{"path":"/reference/matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrices — matrices","text":"","code":"mat_quant(vals, nQuant, nb)  mat_cov(vals, nQuant, nb, matQ)  mat_covNB(vals, nQuant, nb, matQ)"},{"path":"/reference/matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrices — matrices","text":"vals Covariate / sample data nQuant Number quantiles nb Number bands matQ Quantile matrix","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot — plot","title":"Plot — plot","text":"Plot Class Plot","code":""},{"path":"/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot — plot","text":"","code":"classPlot(dfc, coordsgrps, mraster, mraster2, samp)"},{"path":"/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot — plot","text":"dfc data.frame. Values mraster mraster2 coordsgrps List. Cartesian coordinates strata mraster Spatraster. Primary covariate raster stratify. mraster2 Spatraster. Secondary covariate raster stratify. samp Numeric. Determines proportion cells plot","code":""},{"path":"/reference/sample_ahels.html","id":null,"dir":"Reference","previous_headings":"","what":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"Perform adapted Hypercube Evaluation Legacy Sample (ahels) algorithm using existing site data raster metrics. New samples allocated based quantile ratios existing sample covariate dataset.","code":""},{"path":"/reference/sample_ahels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"","code":"sample_ahels(   mraster,   existing,   nQuant = 10,   nSamp = NULL,   threshold = 0.9,   plot = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/sample_ahels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"mraster spatRaster. ALS metrics raster. existing sf. Samples resulting sample_* functions. nQuant Numeric. Number quantiles divide covariates samples . nSamp Numeric. Maximum number new samples allocate. provided, algorithm default allocating number samples provided. threshold Numeric. sample quantile ratio threshold establishing whether additional samples added. default = 0.9. Values close 1 can cause algorithm continually loop used sparingly. plot Logial. Plots existing (circles) new (crosses) samples first band mraster. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc.","code":""},{"path":"/reference/sample_ahels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"Returns sf point object existing samples supplemental samples added ahels algorithm.","code":""},{"path":"/reference/sample_ahels.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"Special thanks Dr. Brendan Malone original implementation algorithm.","code":""},{"path":"/reference/sample_ahels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":[]},{"path":"/reference/sample_ahels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/sample_ahels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"","code":"#--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\tgood.stu\\AppData\\Local\\Temp\\RtmpCYYtR3\\temp_libpath29b8306a58fc\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  sample_ahels(   mraster = mr[[1:3]],   existing = e,   plot = TRUE ) #> Creating covariance matrix. #>    |                                                                       |                                                              |   0%   |                                                                       |                                                              |   1%   |                                                                       |=                                                             |   1%   |                                                                       |=                                                             |   2%   |                                                                       |==                                                            |   2%   |                                                                       |==                                                            |   3%   |                                                                       |==                                                            |   4%   |                                                                       |===                                                           |   4%   |                                                                       |===                                                           |   5%   |                                                                       |===                                                           |   6%   |                                                                       |====                                                          |   6%   |                                                                       |====                                                          |   7%   |                                                                       |=====                                                         |   7%   |                                                                       |=====                                                         |   8%   |                                                                       |=====                                                         |   9%   |                                                                       |======                                                        |   9%   |                                                                       |======                                                        |  10%   |                                                                       |=======                                                       |  10%   |                                                                       |=======                                                       |  11%   |                                                                       |=======                                                       |  12%   |                                                                       |========                                                      |  12%   |                                                                       |========                                                      |  13%   |                                                                       |========                                                      |  14%   |                                                                       |=========                                                     |  14%   |                                                                       |=========                                                     |  15%   |                                                                       |==========                                                    |  15%   |                                                                       |==========                                                    |  16%   |                                                                       |==========                                                    |  17%   |                                                                       |===========                                                   |  17%   |                                                                       |===========                                                   |  18%   |                                                                       |===========                                                   |  19%   |                                                                       |============                                                  |  19%   |                                                                       |============                                                  |  20%   |                                                                       |=============                                                 |  20%   |                                                                       |=============                                                 |  21%   |                                                                       |=============                                                 |  22%   |                                                                       |==============                                                |  22%   |                                                                       |==============                                                |  23%   |                                                                       |===============                                               |  23%   |                                                                       |===============                                               |  24%   |                                                                       |===============                                               |  25%   |                                                                       |================                                              |  25%   |                                                                       |================                                              |  26%   |                                                                       |================                                              |  27%   |                                                                       |=================                                             |  27%   |                                                                       |=================                                             |  28%   |                                                                       |==================                                            |  28%   |                                                                       |==================                                            |  29%   |                                                                       |==================                                            |  30%   |                                                                       |===================                                           |  30%   |                                                                       |===================                                           |  31%   |                                                                       |====================                                          |  31%   |                                                                       |====================                                          |  32%   |                                                                       |====================                                          |  33%   |                                                                       |=====================                                         |  33%   |                                                                       |=====================                                         |  34%   |                                                                       |=====================                                         |  35%   |                                                                       |======================                                        |  35%   |                                                                       |======================                                        |  36%   |                                                                       |=======================                                       |  36%   |                                                                       |=======================                                       |  37%   |                                                                       |=======================                                       |  38%   |                                                                       |========================                                      |  38%   |                                                                       |========================                                      |  39%   |                                                                       |========================                                      |  40%   |                                                                       |=========================                                     |  40%   |                                                                       |=========================                                     |  41%   |                                                                       |==========================                                    |  41%   |                                                                       |==========================                                    |  42%   |                                                                       |==========================                                    |  43%   |                                                                       |===========================                                   |  43%   |                                                                       |===========================                                   |  44%   |                                                                       |============================                                  |  44%   |                                                                       |============================                                  |  45%   |                                                                       |============================                                  |  46%   |                                                                       |=============================                                 |  46%   |                                                                       |=============================                                 |  47%   |                                                                       |=============================                                 |  48%   |                                                                       |==============================                                |  48%   |                                                                       |==============================                                |  49%   |                                                                       |===============================                               |  49%   |                                                                       |===============================                               |  50%   |                                                                       |===============================                               |  51%   |                                                                       |================================                              |  51%   |                                                                       |================================                              |  52%   |                                                                       |=================================                             |  52%   |                                                                       |=================================                             |  53%   |                                                                       |=================================                             |  54%   |                                                                       |==================================                            |  54%   |                                                                       |==================================                            |  55%   |                                                                       |==================================                            |  56%   |                                                                       |===================================                           |  56%   |                                                                       |===================================                           |  57%   |                                                                       |====================================                          |  57%   |                                                                       |====================================                          |  58%   |                                                                       |====================================                          |  59%   |                                                                       |=====================================                         |  59%   |                                                                       |=====================================                         |  60%   |                                                                       |======================================                        |  60%   |                                                                       |======================================                        |  61%   |                                                                       |======================================                        |  62%   |                                                                       |=======================================                       |  62%   |                                                                       |=======================================                       |  63%   |                                                                       |=======================================                       |  64%   |                                                                       |========================================                      |  64%   |                                                                       |========================================                      |  65%   |                                                                       |=========================================                     |  65%   |                                                                       |=========================================                     |  66%   |                                                                       |=========================================                     |  67%   |                                                                       |==========================================                    |  67%   |                                                                       |==========================================                    |  68%   |                                                                       |==========================================                    |  69%   |                                                                       |===========================================                   |  69%   |                                                                       |===========================================                   |  70%   |                                                                       |============================================                  |  70%   |                                                                       |============================================                  |  71%   |                                                                       |============================================                  |  72%   |                                                                       |=============================================                 |  72%   |                                                                       |=============================================                 |  73%   |                                                                       |==============================================                |  73%   |                                                                       |==============================================                |  74%   |                                                                       |==============================================                |  75%   |                                                                       |===============================================               |  75%   |                                                                       |===============================================               |  76%   |                                                                       |===============================================               |  77%   |                                                                       |================================================              |  77%   |                                                                       |================================================              |  78%   |                                                                       |=================================================             |  78%   |                                                                       |=================================================             |  79%   |                                                                       |=================================================             |  80%   |                                                                       |==================================================            |  80%   |                                                                       |==================================================            |  81%   |                                                                       |===================================================           |  81%   |                                                                       |===================================================           |  82%   |                                                                       |===================================================           |  83%   |                                                                       |====================================================          |  83%   |                                                                       |====================================================          |  84%   |                                                                       |====================================================          |  85%   |                                                                       |=====================================================         |  85%   |                                                                       |=====================================================         |  86%   |                                                                       |======================================================        |  86%   |                                                                       |======================================================        |  87%   |                                                                       |======================================================        |  88%   |                                                                       |=======================================================       |  88%   |                                                                       |=======================================================       |  89%   |                                                                       |=======================================================       |  90%   |                                                                       |========================================================      |  90%   |                                                                       |========================================================      |  91%   |                                                                       |=========================================================     |  91%   |                                                                       |=========================================================     |  92%   |                                                                       |=========================================================     |  93%   |                                                                       |==========================================================    |  93%   |                                                                       |==========================================================    |  94%   |                                                                       |===========================================================   |  94%   |                                                                       |===========================================================   |  95%   |                                                                       |===========================================================   |  96%   |                                                                       |============================================================  |  96%   |                                                                       |============================================================  |  97%   |                                                                       |============================================================  |  98%   |                                                                       |============================================================= |  98%   |                                                                       |============================================================= |  99%   |                                                                       |==============================================================|  99%   |                                                                       |==============================================================| 100% #> threshold of 0.9 has been provided. Samples will be added until quantile ratio is reached #> Underrepresented Quantile 1 - A total of 5 samples have been allocated. #> Underrepresented Quantile 2 - A total of 2 samples have been allocated. #> Underrepresented Quantile 3 - A total of 2 samples have been allocated. #> Underrepresented Quantile 4 - A total of 3 samples have been allocated. #> Underrepresented Quantile 5 - A total of 4 samples have been allocated. #> Underrepresented Quantile 6 - A total of 2 samples have been allocated. #> Underrepresented Quantile 7 - A total of 5 samples have been allocated. #> Underrepresented Quantile 8 - A total of 6 samples have been allocated. #> Underrepresented Quantile 9 - A total of 1 samples have been allocated. #> Underrepresented Quantile 10 - A total of 2 samples have been allocated. #> Underrepresented Quantile 11 - A total of 8 samples have been allocated. #> Underrepresented Quantile 12 - A total of 4 samples have been allocated. #> Underrepresented Quantile 13 - A total of 7 samples have been allocated. #> Underrepresented Quantile 14 - A total of 4 samples have been allocated. #> Underrepresented Quantile 15 - A total of 2 samples have been allocated. #> Underrepresented Quantile 16 - A total of 5 samples have been allocated. #> Underrepresented Quantile 17 - A total of 1 samples have been allocated. #> A total of 63 new samples added  #> Simple feature collection with 163 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        type      zmax zmean  zsd               geometry #> 1  existing 11.490000  79.7 4.96 POINT (434970 5343030) #> 2  existing 10.679999  91.9 3.90 POINT (435590 5340510) #> 3  existing  5.640000  24.8 4.23 POINT (434290 5338670) #> 4  existing  7.490000  38.5 3.61 POINT (435170 5340410) #> 5  existing  9.170000  69.4 4.20 POINT (437550 5340650) #> 6  existing 11.059999  79.8 5.30 POINT (435850 5340130) #> 7  existing  9.240000  74.8 5.34 POINT (431630 5343230) #> 8  existing  9.420000  89.6 3.63 POINT (436510 5340870) #> 9  existing  9.059999  65.1 4.80 POINT (435990 5339950) #> 10 existing  8.170000  93.5 3.38 POINT (438250 5337770)  sample_ahels(   mraster = mr[[1:3]],   existing = e,   nQuant = 20,   nSamp = 300,   filename = tempfile(fileext = \".shp\") ) #> Creating covariance matrix. #>    |                                                                       |                                                              |   0%   |                                                                       |                                                              |   1%   |                                                                       |=                                                             |   1%   |                                                                       |=                                                             |   2%   |                                                                       |==                                                            |   2%   |                                                                       |==                                                            |   3%   |                                                                       |==                                                            |   4%   |                                                                       |===                                                           |   4%   |                                                                       |===                                                           |   5%   |                                                                       |===                                                           |   6%   |                                                                       |====                                                          |   6%   |                                                                       |====                                                          |   7%   |                                                                       |=====                                                         |   7%   |                                                                       |=====                                                         |   8%   |                                                                       |=====                                                         |   9%   |                                                                       |======                                                        |   9%   |                                                                       |======                                                        |  10%   |                                                                       |=======                                                       |  10%   |                                                                       |=======                                                       |  11%   |                                                                       |=======                                                       |  12%   |                                                                       |========                                                      |  12%   |                                                                       |========                                                      |  13%   |                                                                       |========                                                      |  14%   |                                                                       |=========                                                     |  14%   |                                                                       |=========                                                     |  15%   |                                                                       |==========                                                    |  15%   |                                                                       |==========                                                    |  16%   |                                                                       |==========                                                    |  17%   |                                                                       |===========                                                   |  17%   |                                                                       |===========                                                   |  18%   |                                                                       |===========                                                   |  19%   |                                                                       |============                                                  |  19%   |                                                                       |============                                                  |  20%   |                                                                       |=============                                                 |  20%   |                                                                       |=============                                                 |  21%   |                                                                       |=============                                                 |  22%   |                                                                       |==============                                                |  22%   |                                                                       |==============                                                |  23%   |                                                                       |===============                                               |  23%   |                                                                       |===============                                               |  24%   |                                                                       |===============                                               |  25%   |                                                                       |================                                              |  25%   |                                                                       |================                                              |  26%   |                                                                       |================                                              |  27%   |                                                                       |=================                                             |  27%   |                                                                       |=================                                             |  28%   |                                                                       |==================                                            |  28%   |                                                                       |==================                                            |  29%   |                                                                       |==================                                            |  30%   |                                                                       |===================                                           |  30%   |                                                                       |===================                                           |  31%   |                                                                       |====================                                          |  31%   |                                                                       |====================                                          |  32%   |                                                                       |====================                                          |  33%   |                                                                       |=====================                                         |  33%   |                                                                       |=====================                                         |  34%   |                                                                       |=====================                                         |  35%   |                                                                       |======================                                        |  35%   |                                                                       |======================                                        |  36%   |                                                                       |=======================                                       |  36%   |                                                                       |=======================                                       |  37%   |                                                                       |=======================                                       |  38%   |                                                                       |========================                                      |  38%   |                                                                       |========================                                      |  39%   |                                                                       |========================                                      |  40%   |                                                                       |=========================                                     |  40%   |                                                                       |=========================                                     |  41%   |                                                                       |==========================                                    |  41%   |                                                                       |==========================                                    |  42%   |                                                                       |==========================                                    |  43%   |                                                                       |===========================                                   |  43%   |                                                                       |===========================                                   |  44%   |                                                                       |============================                                  |  44%   |                                                                       |============================                                  |  45%   |                                                                       |============================                                  |  46%   |                                                                       |=============================                                 |  46%   |                                                                       |=============================                                 |  47%   |                                                                       |=============================                                 |  48%   |                                                                       |==============================                                |  48%   |                                                                       |==============================                                |  49%   |                                                                       |===============================                               |  49%   |                                                                       |===============================                               |  50%   |                                                                       |===============================                               |  51%   |                                                                       |================================                              |  51%   |                                                                       |================================                              |  52%   |                                                                       |=================================                             |  52%   |                                                                       |=================================                             |  53%   |                                                                       |=================================                             |  54%   |                                                                       |==================================                            |  54%   |                                                                       |==================================                            |  55%   |                                                                       |==================================                            |  56%   |                                                                       |===================================                           |  56%   |                                                                       |===================================                           |  57%   |                                                                       |====================================                          |  57%   |                                                                       |====================================                          |  58%   |                                                                       |====================================                          |  59%   |                                                                       |=====================================                         |  59%   |                                                                       |=====================================                         |  60%   |                                                                       |======================================                        |  60%   |                                                                       |======================================                        |  61%   |                                                                       |======================================                        |  62%   |                                                                       |=======================================                       |  62%   |                                                                       |=======================================                       |  63%   |                                                                       |=======================================                       |  64%   |                                                                       |========================================                      |  64%   |                                                                       |========================================                      |  65%   |                                                                       |=========================================                     |  65%   |                                                                       |=========================================                     |  66%   |                                                                       |=========================================                     |  67%   |                                                                       |==========================================                    |  67%   |                                                                       |==========================================                    |  68%   |                                                                       |==========================================                    |  69%   |                                                                       |===========================================                   |  69%   |                                                                       |===========================================                   |  70%   |                                                                       |============================================                  |  70%   |                                                                       |============================================                  |  71%   |                                                                       |============================================                  |  72%   |                                                                       |=============================================                 |  72%   |                                                                       |=============================================                 |  73%   |                                                                       |==============================================                |  73%   |                                                                       |==============================================                |  74%   |                                                                       |==============================================                |  75%   |                                                                       |===============================================               |  75%   |                                                                       |===============================================               |  76%   |                                                                       |===============================================               |  77%   |                                                                       |================================================              |  77%   |                                                                       |================================================              |  78%   |                                                                       |=================================================             |  78%   |                                                                       |=================================================             |  79%   |                                                                       |=================================================             |  80%   |                                                                       |==================================================            |  80%   |                                                                       |==================================================            |  81%   |                                                                       |===================================================           |  81%   |                                                                       |===================================================           |  82%   |                                                                       |===================================================           |  83%   |                                                                       |====================================================          |  83%   |                                                                       |====================================================          |  84%   |                                                                       |====================================================          |  85%   |                                                                       |=====================================================         |  85%   |                                                                       |=====================================================         |  86%   |                                                                       |======================================================        |  86%   |                                                                       |======================================================        |  87%   |                                                                       |======================================================        |  88%   |                                                                       |=======================================================       |  88%   |                                                                       |=======================================================       |  89%   |                                                                       |=======================================================       |  90%   |                                                                       |========================================================      |  90%   |                                                                       |========================================================      |  91%   |                                                                       |=========================================================     |  91%   |                                                                       |=========================================================     |  92%   |                                                                       |=========================================================     |  93%   |                                                                       |==========================================================    |  93%   |                                                                       |==========================================================    |  94%   |                                                                       |===========================================================   |  94%   |                                                                       |===========================================================   |  95%   |                                                                       |===========================================================   |  96%   |                                                                       |============================================================  |  96%   |                                                                       |============================================================  |  97%   |                                                                       |============================================================  |  98%   |                                                                       |============================================================= |  98%   |                                                                       |============================================================= |  99%   |                                                                       |==============================================================|  99%   |                                                                       |==============================================================| 100% #> nSamp of 300 has been provided. Samples will be added until this number is reached #> Underrepresented Quantile 1 - A total of 3 samples have been allocated. #> Underrepresented Quantile 2 - A total of 3 samples have been allocated. #> Underrepresented Quantile 3 - A total of 2 samples have been allocated. #> Underrepresented Quantile 4 - A total of 2 samples have been allocated. #> Underrepresented Quantile 5 - A total of 6 samples have been allocated. #> Underrepresented Quantile 6 - A total of 2 samples have been allocated. #> Underrepresented Quantile 7 - A total of 2 samples have been allocated. #> Underrepresented Quantile 8 - A total of 7 samples have been allocated. #> Underrepresented Quantile 9 - A total of 1 samples have been allocated. #> Underrepresented Quantile 10 - A total of 2 samples have been allocated. #> Underrepresented Quantile 11 - A total of 7 samples have been allocated. #> Underrepresented Quantile 12 - A total of 10 samples have been allocated. #> Underrepresented Quantile 13 - A total of 1 samples have been allocated. #> Underrepresented Quantile 14 - A total of 1 samples have been allocated. #> Underrepresented Quantile 15 - A total of 4 samples have been allocated. #> Underrepresented Quantile 16 - A total of 5 samples have been allocated. #> Underrepresented Quantile 17 - A total of 2 samples have been allocated. #> Underrepresented Quantile 18 - A total of 5 samples have been allocated. #> Underrepresented Quantile 19 - A total of 2 samples have been allocated. #> Underrepresented Quantile 20 - A total of 4 samples have been allocated. #> Underrepresented Quantile 21 - A total of 1 samples have been allocated. #> Underrepresented Quantile 22 - A total of 5 samples have been allocated. #> Underrepresented Quantile 23 - A total of 1 samples have been allocated. #> Underrepresented Quantile 24 - A total of 3 samples have been allocated. #> Underrepresented Quantile 25 - A total of 1 samples have been allocated. #> Underrepresented Quantile 26 - A total of 1 samples have been allocated. #> Underrepresented Quantile 27 - A total of 8 samples have been allocated. #> Underrepresented Quantile 28 - A total of 3 samples have been allocated. #> Underrepresented Quantile 29 - A total of 1 samples have been allocated. #> Underrepresented Quantile 30 - A total of 1 samples have been allocated. #> Underrepresented Quantile 31 - A total of 5 samples have been allocated. #> Underrepresented Quantile 32 - A total of 3 samples have been allocated. #> Underrepresented Quantile 33 - A total of 3 samples have been allocated. #> Underrepresented Quantile 34 - A total of 1 samples have been allocated. #> Underrepresented Quantile 35 - A total of 1 samples have been allocated. #> Underrepresented Quantile 36 - A total of 1 samples have been allocated. #> Underrepresented Quantile 37 - A total of 1 samples have been allocated. #> Underrepresented Quantile 38 - A total of 1 samples have been allocated. #> Underrepresented Quantile 39 - A total of 6 samples have been allocated. #> Underrepresented Quantile 40 - A total of 2 samples have been allocated. #> Underrepresented Quantile 41 - A total of 4 samples have been allocated. #> Underrepresented Quantile 42 - A total of 1 samples have been allocated. #> Underrepresented Quantile 43 - A total of 4 samples have been allocated. #> Underrepresented Quantile 44 - A total of 1 samples have been allocated. #> Underrepresented Quantile 45 - A total of 1 samples have been allocated. #> Underrepresented Quantile 46 - A total of 4 samples have been allocated. #> Underrepresented Quantile 47 - A total of 3 samples have been allocated. #> Underrepresented Quantile 48 - A total of 5 samples have been allocated. #> Underrepresented Quantile 49 - A total of 3 samples have been allocated. #> Underrepresented Quantile 50 - A total of 1 samples have been allocated. #> Underrepresented Quantile 51 - A total of 3 samples have been allocated. #> Underrepresented Quantile 52 - A total of 3 samples have been allocated. #> Underrepresented Quantile 53 - A total of 1 samples have been allocated. #> Underrepresented Quantile 54 - A total of 2 samples have been allocated. #> Underrepresented Quantile 55 - A total of 1 samples have been allocated. #> Underrepresented Quantile 56 - A total of 1 samples have been allocated. #> Underrepresented Quantile 57 - A total of 8 samples have been allocated. #> Underrepresented Quantile 58 - A total of 4 samples have been allocated. #> Underrepresented Quantile 59 - A total of 4 samples have been allocated. #> Underrepresented Quantile 60 - A total of 6 samples have been allocated. #> Underrepresented Quantile 61 - A total of 1 samples have been allocated. #> Underrepresented Quantile 62 - A total of 1 samples have been allocated. #> Underrepresented Quantile 63 - A total of 1 samples have been allocated. #> Underrepresented Quantile 64 - A total of 6 samples have been allocated. #> Underrepresented Quantile 65 - A total of 1 samples have been allocated. #> Underrepresented Quantile 66 - A total of 1 samples have been allocated. #> Underrepresented Quantile 67 - A total of 3 samples have been allocated. #> Underrepresented Quantile 68 - A total of 1 samples have been allocated. #> Underrepresented Quantile 69 - A total of 1 samples have been allocated. #> Underrepresented Quantile 70 - A total of 2 samples have been allocated. #> Underrepresented Quantile 71 - A total of 1 samples have been allocated. #> Underrepresented Quantile 72 - A total of 3 samples have been allocated. #> Underrepresented Quantile 73 - A total of 2 samples have been allocated. #> Underrepresented Quantile 74 - A total of 1 samples have been allocated. #> Underrepresented Quantile 75 - A total of 3 samples have been allocated. #> Underrepresented Quantile 76 - A total of 6 samples have been allocated. #> Underrepresented Quantile 77 - A total of 5 samples have been allocated. #> Underrepresented Quantile 78 - A total of 3 samples have been allocated. #> Underrepresented Quantile 79 - A total of 4 samples have been allocated. #> Underrepresented Quantile 80 - A total of 2 samples have been allocated. #> Underrepresented Quantile 81 - A total of 2 samples have been allocated. #> Underrepresented Quantile 82 - A total of 1 samples have been allocated. #> Underrepresented Quantile 83 - A total of 2 samples have been allocated. #> Underrepresented Quantile 84 - A total of 2 samples have been allocated. #> Underrepresented Quantile 85 - A total of 4 samples have been allocated. #> Underrepresented Quantile 86 - A total of 2 samples have been allocated. #> Underrepresented Quantile 87 - A total of 1 samples have been allocated. #> Underrepresented Quantile 88 - A total of 2 samples have been allocated. #> Underrepresented Quantile 89 - A total of 1 samples have been allocated. #> Underrepresented Quantile 90 - A total of 1 samples have been allocated. #> Underrepresented Quantile 91 - A total of 3 samples have been allocated. #> Underrepresented Quantile 92 - A total of 2 samples have been allocated. #> Underrepresented Quantile 93 - A total of 4 samples have been allocated. #> Underrepresented Quantile 94 - A total of 3 samples have been allocated. #> Underrepresented Quantile 95 - A total of 1 samples have been allocated. #> Underrepresented Quantile 96 - A total of 3 samples have been allocated. #> Underrepresented Quantile 97 - A total of 2 samples have been allocated. #> Underrepresented Quantile 98 - A total of 2 samples have been allocated. #> Underrepresented Quantile 99 - A total of 2 samples have been allocated. #> Underrepresented Quantile 100 - A total of 2 samples have been allocated. #> Underrepresented Quantile 101 - A total of 3 samples have been allocated. #> Underrepresented Quantile 102 - A total of 3 samples have been allocated. #> Underrepresented Quantile 103 - A total of 4 samples have been allocated. #> Underrepresented Quantile 104 - A total of 5 samples have been allocated. #> Underrepresented Quantile 105 - A total of 1 samples have been allocated. #> Underrepresented Quantile 106 - A total of 2 samples have been allocated. #> Underrepresented Quantile 107 - A total of 1 samples have been allocated. #> Underrepresented Quantile 108 - A total of 2 samples have been allocated. #> Underrepresented Quantile 109 - A total of 2 samples have been allocated. #> Underrepresented Quantile 110 - A total of 3 samples have been allocated. #> Underrepresented Quantile 111 - A total of 3 samples have been allocated. #> Underrepresented Quantile 112 - A total of 1 samples have been allocated. #> A total of 300 new samples added #> Writing layer `file77bc6a2c803' to data source  #>   `C:\\Users\\tgood.stu\\AppData\\Local\\Temp\\RtmporEPgO\\file77bc6a2c803.shp' using driver `ESRI Shapefile' #> Writing 400 features with 4 fields and geometry type Point. #> Simple feature collection with 400 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        type      zmax zmean  zsd               geometry #> 1  existing 11.490000  79.7 4.96 POINT (434970 5343030) #> 2  existing 10.679999  91.9 3.90 POINT (435590 5340510) #> 3  existing  5.640000  24.8 4.23 POINT (434290 5338670) #> 4  existing  7.490000  38.5 3.61 POINT (435170 5340410) #> 5  existing  9.170000  69.4 4.20 POINT (437550 5340650) #> 6  existing 11.059999  79.8 5.30 POINT (435850 5340130) #> 7  existing  9.240000  74.8 5.34 POINT (431630 5343230) #> 8  existing  9.420000  89.6 3.63 POINT (436510 5340870) #> 9  existing  9.059999  65.1 4.80 POINT (435990 5339950) #> 10 existing  8.170000  93.5 3.38 POINT (438250 5337770)"},{"path":"/reference/sample_balanced.html","id":null,"dir":"Reference","previous_headings":"","what":"Balanced sampling — sample_balanced","title":"Balanced sampling — sample_balanced","text":"Balanced raster sampling using lcube lpm2_kdtree methods","code":""},{"path":"/reference/sample_balanced.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balanced sampling — sample_balanced","text":"","code":"sample_balanced(   mraster,   nSamp,   algorithm = \"lpm2_kdtree\",   p = NULL,   access = NULL,   buff_inner = NULL,   buff_outer = NULL,   plot = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/sample_balanced.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balanced sampling — sample_balanced","text":"mraster spatRaster. ALS metrics raster. nSamp Numeric. Number desired samples. algorithm Character. One lpm2_kdtree, lcube, lcubestratified p Numeric. Vector length equal number cells mraster representing inclusion probability candidate sample. Default = nSamp / N, N number cells. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled. plot Logical. Plots output strata raster visualized strata boundary dividers. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc.","code":""},{"path":"/reference/sample_balanced.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balanced sampling — sample_balanced","text":"sf object nSamp randomly sampled points.","code":""},{"path":"/reference/sample_balanced.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Balanced sampling — sample_balanced","text":"Anton Grafstrom Jonathan Lisic (2019). BalancedSampling: Balanced Spatially Balanced Sampling. R package version 1.5.5. https://CRAN.R-project.org/package=BalancedSampling Jonathan Lisic Anton Grafstrom (2018). SamplingBigData: Sampling Methods Big Data. R package version 1.0.0. https://CRAN.R-project.org/package=SamplingBigData Grafström, . Lisic, J (2018). BalancedSampling: Balanced Spatially Balanced Sampling.  R package version 1.5.4. http://www.antongrafstrom.se/balancedsampling","code":""},{"path":[]},{"path":"/reference/sample_balanced.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Balanced sampling — sample_balanced","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/sample_balanced.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balanced sampling — sample_balanced","text":"","code":"if (FALSE) { #--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\") ac <- sf::st_read(a)  sample_balanced(   mraster = mr,   nSamp = 200,   plot = TRUE )  sample_balanced(   mraster = mr,   nSamp = 100,   algorithm = \"lcube\",   access = ac,   buff_inner = 50,   buff_outer = 200 ) }"},{"path":"/reference/sample_clhs.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditioned Latin Hypercube Sampling — sample_clhs","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"Conditioned Latin Hypercube Sampling using clhs functionality.","code":""},{"path":"/reference/sample_clhs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"","code":"sample_clhs(   mraster,   nSamp,   iter = 10000,   cost = NULL,   existing = NULL,   access = NULL,   buff_inner = NULL,   buff_outer = NULL,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/sample_clhs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"mraster spatRaster. ALS metrics raster. nSamp Numeric. Number desired samples. iter Numeric. Value giving number iterations within Metropolis-Hastings process. cost Numeric/Character. Index name covariate within mraster used constrain cLHS sampling. default - NULL cost constraint used. existing sf. Samples resulting sample_* functions. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled. plot Logical. Plots output strata raster samples. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists. ... Additional arguments clhs sampling. See clhs.","code":""},{"path":"/reference/sample_clhs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"sf object nSamp stratified samples.","code":""},{"path":"/reference/sample_clhs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"Minasny, B. McBratney, .B. 2006. conditioned Latin hypercube method sampling presence ancillary information. Computers Geosciences, 32:1378-1388. Minasny, B. . B. McBratney, .B.. 2010. Conditioned Latin Hypercube Sampling Calibrating Soil Sensor Data Soil Properties. : Proximal Soil Sensing, Progress Soil Science, pages 111-119. Roudier, P., Beaudette, D.E. Hewitt, .E. 2012. conditioned Latin hypercube sampling algorithm incorporating operational constraints. : Digital Soil Assessments Beyond. Proceedings 5th Global Workshop Digital Soil Mapping, Sydney, Australia.","code":""},{"path":[]},{"path":"/reference/sample_clhs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/sample_clhs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"","code":"#--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\") ac <- sf::st_read(a) #> Reading layer `roads' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\roads.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 167 features and 2 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  sample_clhs(   mraster = mr,   nSamp = 200,   plot = TRUE,   iter = 100 )  #> Simple feature collection with 200 features and 10 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        zmax zmean  zsd pzabove2  zq20  zq50  zq70      zq90  zq95 type #> 38351 15.87  77.6 3.46    11.72 13.91 16.68 17.77 19.850000 20.68  new #> 22884 14.51  92.6 3.66    10.56 12.39 15.09 16.35 19.219999 23.34  new #> 46045 14.44  90.9 6.22     5.25  7.81 15.49 19.45 22.510000 23.55  new #> 1720   6.80  70.0 3.53     2.01  3.38  6.51  8.52 13.190000 15.04  new #> 16377  8.24  76.4 4.26     3.01  4.26  7.66 10.42 15.910000 18.55  new #> 24314 14.18  89.5 5.30     4.09 10.08 16.19 17.75 19.629999 20.32  new #> 60617 11.40  86.6 5.60     2.80  5.70 12.05 14.82 20.270000 22.47  new #> 85300  4.63  72.3 2.44     1.81  2.38  4.16  5.65  9.469999 11.25  new #> 67951  5.63  51.2 2.92     1.84  2.67  5.31  7.32 10.550000 12.21  new #> 74966  2.55  20.7 0.08     2.46  2.50  2.56  2.60  2.630000  2.64  new #>                     geometry #> 38351 POINT (436690 5341010) #> 22884 POINT (436290 5341910) #> 46045 POINT (436430 5340550) #> 1720  POINT (434630 5343130) #> 16377 POINT (436370 5342270) #> 24314 POINT (437150 5341830) #> 60617 POINT (434630 5339670) #> 85300 POINT (436070 5338030) #> 67951 POINT (434890 5339210) #> 74966 POINT (433550 5338650)  sample_clhs(   mraster = mr,   nSamp = 400,   existing = e,   iter = 250,   details = TRUE ) #> $clhs #>   [1] 16881 23314 88274 16860 45133 73152 16155 42277 80200 13125  6320 #>  [12] 46890 79730 50947 54052 35198 27258 32351 43665  2518 79193 22088 #>  [23]  2485 14378  4308 62556 43250 12208 66508 18469 68508 57079  8002 #>  [34]  9642 63431 29340 58830 15132 55443   668 15329 53927 34655 47207 #>  [45] 34875 73037 49113 53194 71477 83899   556 27974 71527 65712 17789 #>  [56]  3551 60005 26089 52847 41368 76072 21622 67784 31370 88493 70666 #>  [67] 87896 78661 33565 90306  2004 51314 26961 58403 24188 80441 45504 #>  [78]  4697 83386 82542 66999  4431 62740 84643 19996 60647  4906  7830 #>  [89] 59202 69160 55688  8595 78024 29771 10291 40555 90647 79966 28528 #> [100]  2189 89367 50722 34630 17523 35771 16753 64813 20507 69517 43614 #> [111] 38754 82402 47577  6956  6551 48550  3858 16135 38747 28880 40219 #> [122] 14393 61444 14595 85667 68172 13825 62130 31648 60468 64582 27172 #> [133]  5948 17300 91284 80565 31180 34665 13560 77095 62640 75047 43721 #> [144] 54078 73326 28349 55205 40968 32906 24745 24411 59255 51910 30910 #> [155] 14112 53190 43494  9333 87359 81883 88428 36707 83234 14138 58416 #> [166] 43530  1106 40177 82730  2622 71230 20435 25158 17700 42980 79025 #> [177] 77551 29228 78045 41606  4113 46921 37529 49670 33173 18086 74883 #> [188] 44388 72934 12357 23584 84915 80977 83106 17067 89878 75873 36157 #> [199]  7144 38475 38014 61611 39122 44225 38962 86239 82055  9927 75630 #> [210] 40306 88000 34064 89406 31192 63709 69832 62201  7095  9918 56751 #> [221] 49578 81634 81053 60864 79740 76221 17271  2967 61877 46387 63931 #> [232]   407 49202 71554 78425 84601 72813 82130   502 17509 24954 30873 #> [243] 27930 32636 22272 62075 44700 39657 34385 91042 58758 26168 68628 #> [254] 79440 37794 37005 78791 33921 23813 19409 46532 86514 27940  6817 #> [265] 64636 85869 65323 50163 65069 85558 77802 63022 75507 29653 39901 #> [276]  5371 66127  7622 75947  5991 58025 68488 23157 79604 85056  6679 #> [287]  2493 38205 17652 53546 30136 34632  4864 77989 20538 49905 80632 #> [298] 67302 80637 46945 56512 61565 64959  8597 59860 27895 40402 19881 #> [309] 56365 53373 19066 74000 73612 22503 17082 62563 75399 25648 29903 #> [320] 63448 49590 56495 89091 56378 41147 42147 41419 26269  9351 84240 #> [331] 89381 89827 17778 14842 70722 73374 88846 43990 65958 66264  9167 #> [342] 81199 52679 31189 10314 88522 38013 42404  2515 30130 47958 81388 #> [353] 53923 36499 25650 15465 68021 51223 66108 38914 12550 58523 88828 #> [364] 65016 25319 64299 25968 16655 40251 36407 33114 52762 91017 14256 #> [375] 74042 73229 30051 25166 16844 24862 14024 43087  1139 20785 52349 #> [386] 17766 28520 48607 10613 55858 34337 37748 13770 67213 20016 42543 #> [397] 68654 74550 11004 27623 #>  #> $samples #> Simple feature collection with 400 features and 10 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        zmax zmean  zsd pzabove2  zq20  zq50  zq70  zq90  zq95 type #> 16781 15.91  88.3 7.40     2.23  3.53 18.98 20.40 22.94 23.77  new #> 23214  9.45  65.7 4.75     3.04  4.54  9.49 12.37 17.61 19.10  new #> 88174 12.40  94.2 3.39     8.65 10.32 12.55 14.02 17.45 20.00  new #> 16760 11.83  83.1 3.80     7.17  9.49 12.14 13.75 17.11 19.64  new #> 45033 15.09  92.6 4.76     9.33 13.12 15.48 17.02 22.18 24.22  new #> 73052  5.29  75.1 2.53     2.24  3.03  4.98  6.35 10.11 12.15  new #> 16055 13.08  90.1 5.09     6.19  9.63 12.70 15.25 21.75 22.77  new #> 42177  2.89   7.8 2.14     1.38  1.48  1.90  2.59  7.96  9.27  new #> 80100  6.74  89.5 2.69     3.13  4.38  6.71  8.07 11.34 13.77  new #> 13025  3.07  52.1 1.33     1.65  1.99  2.78  3.34  5.90  7.23  new #>                     geometry #> 16781 POINT (437250 5342250) #> 23214 POINT (435650 5341890) #> 88174 POINT (435470 5337870) #> 16760 POINT (436810 5342250) #> 45033 POINT (436010 5340610) #> 73052 POINT (433650 5338810) #> 16055 POINT (437170 5342290) #> 42177 POINT (433510 5340770) #> 80100 POINT (432150 5338310) #> 13025 POINT (432490 5342450) #>   sample_clhs(   mraster = mr,   nSamp = 200,   iter = 200,   existing = e,   access = ac,   buff_inner = 100,   buff_outer = 300,   plot = TRUE ) #> An access layer has been provided. An internal buffer of 100 m and an external buffer of 300 m have been applied  #> Simple feature collection with 200 features and 10 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431270 ymin: 5337730 xmax: 438550 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        zmax zmean  zsd pzabove2 zq20  zq50  zq70  zq90  zq95 type #> 2264  14.55  80.0 7.44     2.61 5.83 15.82 20.36 23.74 24.63  new #> 12321  5.13  90.9 3.15     2.21 2.67  3.93  5.88 12.12 14.62  new #> 22458  7.11  81.7 4.04     1.95 2.63  7.06  9.29 14.22 17.03  new #> 30340  7.34  95.8 2.64     3.71 5.00  7.37  8.71 11.81 13.72  new #> 23605  6.88  37.0 4.87     1.54 1.88  5.66  9.99 15.92 17.47  new #> 24190 11.77  92.5 4.25     6.62 8.46 11.70 14.06 18.48 19.77  new #> 8037   0.00   0.0 0.00     0.00 0.00  0.00  0.00  0.00  0.00  new #> 18399  5.46  93.4 1.52     3.54 4.10  5.40  6.26  7.98  9.01  new #> 24507 12.02  83.1 4.66     4.72 8.03 13.07 14.59 19.15 21.15  new #> 21295  5.19  66.2 3.44     1.84 2.38  4.69  6.01 12.68 18.07  new #>                     geometry #> 2264  POINT (436570 5342870) #> 12321 POINT (436730 5341690) #> 22458 POINT (435550 5340310) #> 30340 POINT (433150 5339030) #> 23605 POINT (435030 5340150) #> 24190 POINT (432550 5340050) #> 8037  POINT (436330 5342170) #> 18399 POINT (438050 5340810) #> 24507 POINT (438270 5340010) #> 21295 POINT (431270 5340430)  #--- cost constrained examples ---# #--- calculate distance to access layer for each pixel in mr ---# mr.c <- calculate_distance(   raster = mr,   access = ac ) #> calculating per pixel distance to provided access layer  sample_clhs(   mraster = mr.c,   nSamp = 250,   iter = 200,   cost = \"dist2access\",   plot = TRUE )  #> Simple feature collection with 250 features and 11 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        zmax zmean  zsd pzabove2  zq20      zq50  zq70  zq90  zq95 #> 2790  13.82  85.6 5.76     5.27  8.50 14.759999 18.23 21.38 22.31 #> 82059  4.85  68.4 1.96     2.35  3.18  4.610000  5.73  8.29 10.14 #> 30526  1.79   0.3 0.41     1.34  1.43  1.660000  1.96  2.60  2.79 #> 9608   6.65  66.3 3.81     2.17  2.94  6.020000  8.63 13.79 17.89 #> 74021 11.47  93.1 3.97     4.74  8.79 12.059999 13.78 16.72 17.60 #> 21229  9.69  88.2 4.28     3.73  5.79  9.679999 11.94 16.91 19.25 #> 50852  8.57  90.5 4.92     2.40  3.34  8.410000 11.70 16.83 18.55 #> 84955  4.07  60.4 2.25     1.77  2.18  3.600000  4.72  8.50 12.08 #> 48670 16.54  89.9 5.72     7.11 13.82 18.539999 20.13 21.92 22.58 #> 57014 14.22  94.3 3.63    11.02 12.80 14.849999 16.08 18.44 20.10 #>       dist2access type               geometry #> 2790   132.102798  new POINT (431950 5343050) #> 82059   31.006655  new POINT (437110 5338210) #> 30526    2.358502  new POINT (438030 5341470) #> 9608   141.655405  new POINT (435210 5342670) #> 74021  292.759527  new POINT (433890 5338730) #> 21229  636.983038  new POINT (431630 5341990) #> 50852  198.431129  new POINT (438330 5340270) #> 84955  117.088643  new POINT (436510 5338050) #> 48670  380.893723  new POINT (435730 5340390) #> 57014  663.823753  new POINT (431470 5339890)  sample_clhs(   mraster = mr.c,   nSamp = 250,   existing = e,   iter = 200,   cost = \"dist2access\",   plot = TRUE )  #> Simple feature collection with 250 features and 11 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337730 xmax: 438510 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        zmax zmean  zsd pzabove2  zq20  zq50  zq70  zq90  zq95 #> 23027 20.04  90.6 5.15    13.22 18.83 21.64 22.77 24.44 25.09 #> 57155  3.73  74.6 1.92     1.74  2.10  3.16  4.22  7.72  8.91 #> 51733  8.32  87.0 3.53     3.18  5.19  8.51 10.06 14.36 16.17 #> 88445 12.18  97.6 3.21     8.26  9.71 12.56 14.08 16.59 18.32 #> 31830 11.32  76.8 5.74     2.51  4.14 12.06 15.39 19.21 21.43 #> 65389  7.22  90.8 2.88     3.03  4.69  7.43  8.61 12.01 14.74 #> 87293 13.13  90.6 4.18     7.61  9.98 13.90 15.72 18.62 20.63 #> 62120  6.91  83.9 3.71     2.55  3.66  6.28  8.34 14.50 17.70 #> 30775 11.53  84.8 4.21     5.91  8.40 11.46 13.87 18.28 20.28 #> 64484  9.82  72.8 5.48     2.31  3.48 10.48 13.55 18.22 20.02 #>       dist2access type               geometry #> 23027    486.9284  new POINT (431890 5341890) #> 57155    166.9519  new POINT (434910 5339890) #> 51733    111.8259  new POINT (435210 5340210) #> 88445    653.3979  new POINT (433430 5337850) #> 31830    633.1729  new POINT (435710 5341390) #> 65389    579.4652  new POINT (437010 5339390) #> 87293    149.7974  new POINT (432030 5337910) #> 62120    465.3883  new POINT (437590 5339590) #> 30775    483.0018  new POINT (435870 5341450) #> 64484    207.6449  new POINT (437870 5339450)"},{"path":"/reference/sample_srs.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple random sampling — sample_srs","title":"Simple random sampling — sample_srs","text":"Randomly sample within stratification raster extent.","code":""},{"path":"/reference/sample_srs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple random sampling — sample_srs","text":"","code":"sample_srs(   raster,   nSamp,   mindist = NULL,   access = NULL,   buff_inner = NULL,   buff_outer = NULL,   plot = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/sample_srs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple random sampling — sample_srs","text":"raster spatRaster. Raster used random sampling. nSamp Numeric. Number desired samples. mindist Numeric. Minimum allowable distance selected samples. Default = NULL. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled. plot Logical. Plots output strata raster samples. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists.","code":""},{"path":"/reference/sample_srs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple random sampling — sample_srs","text":"sf object nSamp randomly sampled points.","code":""},{"path":[]},{"path":"/reference/sample_srs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simple random sampling — sample_srs","text":"Tristan R.H. Goodbody & Martin Queinnec","code":""},{"path":"/reference/sample_srs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple random sampling — sample_srs","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sr <- terra::rast(r)  a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\") ac <- sf::st_read(a) #> Reading layer `roads' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\roads.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 167 features and 2 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  #--- perform simple random sampling ---# sample_srs(   raster = sr,   nSamp = 200,   plot = TRUE )  #> Simple feature collection with 200 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (432710 5341450) #> 2  POINT (432710 5341450) #> 3  POINT (432270 5337710) #> 4  POINT (434330 5338670) #> 5  POINT (437170 5342270) #> 6  POINT (434350 5341530) #> 7  POINT (436310 5340430) #> 8  POINT (431150 5338730) #> 9  POINT (431930 5340590) #> 10 POINT (432830 5338410)  sample_srs(   raster = sr,   nSamp = 200,   access = ac,   mindist = 200,   buff_inner = 50,   buff_outer = 200 ) #> An access layer has been provided. An internal buffer of 50 m and an external buffer of 200 m have been applied #> Registered S3 method overwritten by 'spatstat.geom': #>   method     from #>   print.boxx cli  #> Simple feature collection with 200 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431150 ymin: 5337710 xmax: 438550 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (435290 5338750) #> 2  POINT (437630 5342210) #> 3  POINT (432770 5342210) #> 4  POINT (435930 5342450) #> 5  POINT (438470 5338270) #> 6  POINT (433270 5341070) #> 7  POINT (437850 5339210) #> 8  POINT (435190 5340350) #> 9  POINT (434150 5341530) #> 10 POINT (432750 5341610)  sample_srs(   raster = sr,   nSamp = 200,   access = ac,   buff_inner = 50,   buff_outer = 200,   filename = tempfile(fileext = \".shp\") ) #> An access layer has been provided. An internal buffer of 50 m and an external buffer of 200 m have been applied #> Writing layer `file4b1044952f78' to data source  #>   `C:\\Users\\tgood.stu\\AppData\\Local\\Temp\\RtmpqQhz0Q\\file4b1044952f78.shp' using driver `ESRI Shapefile' #> Writing 200 features with 0 fields and geometry type Point. #> Simple feature collection with 200 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431370 ymin: 5337710 xmax: 438510 ymax: 5343190 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (433690 5340650) #> 2  POINT (433690 5340650) #> 3  POINT (436150 5342610) #> 4  POINT (438030 5340030) #> 5  POINT (432650 5342930) #> 6  POINT (432030 5338750) #> 7  POINT (433030 5342350) #> 8  POINT (434450 5342250) #> 9  POINT (437750 5338990) #> 10 POINT (434970 5342410)"},{"path":"/reference/sample_strat.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratified sampling — sample_strat","title":"Stratified sampling — sample_strat","text":"Sampling based stratified raster.","code":""},{"path":"/reference/sample_strat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratified sampling — sample_strat","text":"","code":"sample_strat(   sraster,   nSamp,   force = FALSE,   allocation = \"prop\",   mraster = NULL,   mindist = NULL,   existing = NULL,   include = FALSE,   access = NULL,   buff_inner = NULL,   buff_outer = NULL,   wrow = 3,   wcol = 3,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/sample_strat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratified sampling — sample_strat","text":"sraster spatRaster. Stratification raster used sampling. nSamp Numeric. Number desired samples. existing include force influence value. force Logical. Default = FALSE - force nSamp exactly user defined value cases nSamp sraster strata count equally divisible. effect existing provided. allocation Character. Allocation algorithm used. Either prop (default) proportional allocation optim optimal allocation (equal sampling cost) equal equal number samples (defined nSamp)  strata. mraster spatRaster. ALS metric raster. Required allocation = optim. mindist Numeric. Minimum allowable distance selected samples. Default = NULL. existing sf data.frame.  Existing plot network. include Logical. TRUE include existing plots nSamp total. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled. wrow Numeric. Number row focal window (default 3). wcol Numeric. Number columns focal window (default 3). plot Logical. Plots existing (circles) new (crosses) samples. details Logical. FALSE (default) output sf object stratified samples. TRUE return list $details additional sampling information $raster sf object stratified samples. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists.","code":""},{"path":"/reference/sample_strat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratified sampling — sample_strat","text":"sf object nSamp stratified samples.","code":""},{"path":"/reference/sample_strat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Stratified sampling — sample_strat","text":"sampling performed 2 stages: Rule 1 - Sample within grouped stratum pixels defined within wrow, wcol parameters Rule 2 - samples exist satisfy Rule 1  individual stratum pixels sampled. rule applied allocate sample defined rule attribute output samples.","code":""},{"path":"/reference/sample_strat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stratified sampling — sample_strat","text":"Queinnec, M., White, J. C., & Coops, N. C. (2021).  Comparing airborne spaceborne photon-counting LiDAR canopy  structural estimates across different boreal forest types.  Remote Sensing Environment, 262 (August 2020), 112510.  https://doi.org/10.1016/j.rse.2021.112510","code":""},{"path":[]},{"path":"/reference/sample_strat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stratified sampling — sample_strat","text":"Tristan R.H. Goodbody & Martin Queinnec","code":""},{"path":"/reference/sample_strat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratified sampling — sample_strat","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sr <- terra::rast(r)  a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\") ac <- sf::st_read(a) #> Reading layer `roads' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\roads.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 167 features and 2 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  #--- perform stratified sampling random sampling ---# sample_strat(   sraster = sr,   nSamp = 200,   plot = TRUE ) #> Implementing porportional allocation of samples #> nSamp of 200 is not perfectly divisible based on strata distribution. nSamp of 199 will be returned. Use \"force = TRUE\" to brute force to 200. #> Processing strata : 1 #> Processing strata : 2 #> Processing strata : 3 #> Processing strata : 4 #> Processing strata : 5 #> Processing strata : 6 #> Processing strata : 7 #> Processing strata : 8 #> Processing strata : 9 #> Processing strata : 10  #> Simple feature collection with 199 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431270 ymin: 5337750 xmax: 438550 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>    strata type  rule               geometry #> x       1  new rule1 POINT (436770 5341330) #> x1      1  new rule1 POINT (437050 5340990) #> x2      1  new rule1 POINT (433450 5338950) #> x3      1  new rule1 POINT (438110 5341850) #> x4      1  new rule1 POINT (438510 5340850) #> x5      1  new rule1 POINT (431290 5342670) #> x6      1  new rule1 POINT (433450 5338930) #> x7      1  new rule1 POINT (435490 5340170) #> x8      1  new rule1 POINT (438390 5340830) #> x9      1  new rule1 POINT (433290 5338070)  #--- perform stratified sampling random sampling ---# sample_strat(   sraster = sr,   nSamp = 200,   plot = TRUE,   force = TRUE ) #> Implementing porportional allocation of samples #> Forcing 200 total samples. #> Processing strata : 1 #> Processing strata : 2 #> Processing strata : 3 #> Processing strata : 4 #> Processing strata : 5 #> Processing strata : 6 #> Processing strata : 7 #> Processing strata : 8 #> Processing strata : 9 #> Processing strata : 10  #> Simple feature collection with 200 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431150 ymin: 5337730 xmax: 438530 ymax: 5343190 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>    strata type  rule               geometry #> x       1  new rule1 POINT (433470 5338930) #> x1      1  new rule1 POINT (432770 5338430) #> x2      1  new rule1 POINT (438490 5340850) #> x3      1  new rule1 POINT (438370 5340830) #> x4      1  new rule1 POINT (438390 5340830) #> x5      1  new rule1 POINT (432730 5338350) #> x6      1  new rule1 POINT (438110 5341850) #> x7      1  new rule1 POINT (437350 5340150) #> x8      1  new rule1 POINT (431310 5342650) #> x9      1  new rule1 POINT (433330 5338030)  #--- extract strata values to existing samples ---# e.sr <- extract_strata(sraster = sr, existing = e)  sample_strat(   sraster = sr,   nSamp = 200,   access = ac,   existing = e.sr,   mindist = 200,   buff_inner = 50,   buff_outer = 200 ) #> Implementing porportional allocation of samples #> nSamp of 200 is not perfectly divisible based on strata distribution. nSamp of 199 will be returned. Use \"force = TRUE\" to brute force to 200. #> An access layer has been provided. An internal buffer of 50 m and an external buffer of 200 m have been applied #> Processing strata : 1 #> Buffered area contains 2273 available candidates. Sampling to reach 13 samples starting. #> Processing strata : 2 #> Buffered area contains 6190 available candidates. Sampling to reach 29 samples starting. #> Processing strata : 3 #> Buffered area contains 2213 available candidates. Sampling to reach 14 samples starting. #> Processing strata : 4 #> Buffered area contains 3230 available candidates. Sampling to reach 21 samples starting. #> Processing strata : 5 #> Buffered area contains 4430 available candidates. Sampling to reach 25 samples starting. #> Processing strata : 6 #> Buffered area contains 4338 available candidates. Sampling to reach 24 samples starting. #> Processing strata : 7 #> Buffered area contains 3774 available candidates. Sampling to reach 24 samples starting. #> Processing strata : 8 #> Buffered area contains 4061 available candidates. Sampling to reach 16 samples starting. #> Processing strata : 9 #> Buffered area contains 6063 available candidates. Sampling to reach 23 samples starting. #> Processing strata : 10 #> Buffered area contains 1666 available candidates. Sampling to reach 10 samples starting. #> Simple feature collection with 299 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>    strata     type     rule               geometry #> 36      1 existing existing POINT (431930 5338510) #> 41      1 existing existing POINT (433990 5341870) #> x       1      new    rule1 POINT (431290 5342670) #> x1      1      new    rule1 POINT (438090 5341850) #> x2      1      new    rule1 POINT (438390 5340830) #> x3      1      new    rule2 POINT (432690 5340970) #> x4      1      new    rule2 POINT (435270 5339910) #> x5      1      new    rule2 POINT (436110 5339370) #> x6      1      new    rule2 POINT (438290 5341330) #> x7      1      new    rule2 POINT (431950 5338310)  sample_strat(   sraster = sr,   nSamp = 200,   access = ac,   buff_inner = 50,   buff_outer = 200,   filename = tempfile(fileext = \".shp\") ) #> Implementing porportional allocation of samples #> nSamp of 200 is not perfectly divisible based on strata distribution. nSamp of 199 will be returned. Use \"force = TRUE\" to brute force to 200. #> An access layer has been provided. An internal buffer of 50 m and an external buffer of 200 m have been applied #> Processing strata : 1 #> Buffered area contains 2273 available candidates. Sampling to reach 13 samples starting. #> Processing strata : 2 #> Buffered area contains 6190 available candidates. Sampling to reach 29 samples starting. #> Processing strata : 3 #> Buffered area contains 2213 available candidates. Sampling to reach 14 samples starting. #> Processing strata : 4 #> Buffered area contains 3230 available candidates. Sampling to reach 21 samples starting. #> Processing strata : 5 #> Buffered area contains 4430 available candidates. Sampling to reach 25 samples starting. #> Processing strata : 6 #> Buffered area contains 4338 available candidates. Sampling to reach 24 samples starting. #> Processing strata : 7 #> Buffered area contains 3774 available candidates. Sampling to reach 24 samples starting. #> Processing strata : 8 #> Buffered area contains 4061 available candidates. Sampling to reach 16 samples starting. #> Processing strata : 9 #> Buffered area contains 6063 available candidates. Sampling to reach 23 samples starting. #> Processing strata : 10 #> Buffered area contains 1666 available candidates. Sampling to reach 10 samples starting. #> Writing layer `file5c48654f20d' to data source  #>   `C:\\Users\\tgood.stu\\AppData\\Local\\Temp\\RtmpwXljlk\\file5c48654f20d.shp' using driver `ESRI Shapefile' #> Writing 199 features with 3 fields and geometry type Point. #> Simple feature collection with 199 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431190 ymin: 5337750 xmax: 438510 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>    strata type  rule               geometry #> x       1  new rule1 POINT (431310 5342670) #> x1      1  new rule1 POINT (438490 5340850) #> x2      1  new rule1 POINT (438090 5341850) #> x3      1  new rule1 POINT (438110 5341850) #> x4      1  new rule1 POINT (438370 5340830) #> x5      1  new rule1 POINT (438390 5340830) #> x6      1  new rule1 POINT (431290 5342670) #> x7      1  new rule2 POINT (436150 5339470) #> x8      1  new rule2 POINT (433610 5342030) #> x9      1  new rule2 POINT (432630 5340590)  #--- Load mraster for optimal allocation ---# mr <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(mr)  sample_strat(   sraster = sr,   nSamp = 200,   allocation = \"optim\",   mraster = mr$zq90,   access = ac,   buff_inner = 50,   buff_outer = 200,   filename = tempfile(fileext = \".shp\") ) #> Implementing optimal allocation of samples based on variability of 'zq90' #> nSamp of 200 is not perfectly divisible based on strata distribution. nSamp of 199 will be returned. Use \"force = TRUE\" to brute force to 200. #> An access layer has been provided. An internal buffer of 50 m and an external buffer of 200 m have been applied #> Processing strata : 1 #> Buffered area contains 2273 available candidates. Sampling to reach 17 samples starting. #> Processing strata : 2 #> Buffered area contains 6190 available candidates. Sampling to reach 31 samples starting. #> Processing strata : 3 #> Buffered area contains 2213 available candidates. Sampling to reach 14 samples starting. #> Processing strata : 4 #> Buffered area contains 3230 available candidates. Sampling to reach 17 samples starting. #> Processing strata : 5 #> Buffered area contains 4430 available candidates. Sampling to reach 19 samples starting. #> Processing strata : 6 #> Buffered area contains 4338 available candidates. Sampling to reach 21 samples starting. #> Processing strata : 7 #> Buffered area contains 3774 available candidates. Sampling to reach 23 samples starting. #> Processing strata : 8 #> Buffered area contains 4061 available candidates. Sampling to reach 23 samples starting. #> Processing strata : 9 #> Buffered area contains 6063 available candidates. Sampling to reach 21 samples starting. #> Processing strata : 10 #> Buffered area contains 1666 available candidates. Sampling to reach 13 samples starting. #> Writing layer `file5c485d706' to data source  #>   `C:\\Users\\tgood.stu\\AppData\\Local\\Temp\\RtmpwXljlk\\file5c485d706.shp' using driver `ESRI Shapefile' #> Writing 199 features with 3 fields and geometry type Point. #> Simple feature collection with 199 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431190 ymin: 5337730 xmax: 438490 ymax: 5343190 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>    strata type  rule               geometry #> x       1  new rule1 POINT (438110 5341850) #> x1      1  new rule1 POINT (438390 5340830) #> x2      1  new rule1 POINT (431290 5342670) #> x3      1  new rule1 POINT (438490 5340850) #> x4      1  new rule1 POINT (438370 5340830) #> x5      1  new rule1 POINT (438090 5341850) #> x6      1  new rule1 POINT (431310 5342670) #> x7      1  new rule2 POINT (434530 5340910) #> x8      1  new rule2 POINT (436390 5340490) #> x9      1  new rule2 POINT (431510 5342710)"},{"path":"/reference/sample_systematic.html","id":null,"dir":"Reference","previous_headings":"","what":"Systematic sampling — sample_systematic","title":"Systematic sampling — sample_systematic","text":"Systematic sampling within square hexagonal tessellation.","code":""},{"path":"/reference/sample_systematic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Systematic sampling — sample_systematic","text":"","code":"sample_systematic(   raster,   cellsize,   square = TRUE,   location = \"centers\",   access = NULL,   buff_inner = NULL,   buff_outer = NULL,   plot = FALSE,   filename = NULL,   overwrite = FALSE,   details = FALSE,   ... )"},{"path":"/reference/sample_systematic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Systematic sampling — sample_systematic","text":"raster spatRaster. Raster used define extent fishnet grid. cellsize Numeric. Desired cellsize tessellation. square Logical. Tessellation shape. Default regular square grid, FALSE hexagons returned. location Character. Sample location within tessellation. Default (\"centers\") returns samples tessellation centers, \"corners\" - corners returned, \"random\" - samples randomly located within tessellations. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled. plot Logical. Plots output strata raster samples. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists. details Logical. FALSE (default) output sf object systematic samples. TRUE returns list sf objects tessellation tessellation grid sampling, samples systematic samples. ... Additional arguments st_make_grid.","code":""},{"path":"/reference/sample_systematic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Systematic sampling — sample_systematic","text":"sf object sampled points tessellation.","code":""},{"path":[]},{"path":"/reference/sample_systematic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Systematic sampling — sample_systematic","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/sample_systematic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Systematic sampling — sample_systematic","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sr <- terra::rast(r)  a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\") ac <- sf::st_read(a) #> Reading layer `roads' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\roads.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 167 features and 2 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  #--- perform grid sampling ---# sample_systematic(   raster = sr,   cellsize = 1000,   plot = TRUE )  #> Simple feature collection with 40 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431600 ymin: 5338200 xmax: 437600 ymax: 5343200 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (431600 5338200) #> 2  POINT (432600 5338200) #> 3  POINT (433600 5338200) #> 4  POINT (434600 5338200) #> 5  POINT (435600 5338200) #> 6  POINT (436600 5338200) #> 7  POINT (437600 5338200) #> 8  POINT (432600 5339200) #> 9  POINT (433600 5339200) #> 10 POINT (434600 5339200)  sample_systematic(   raster = sr,   cellsize = 1000,   square = FALSE,   location = \"corners\",   plot = TRUE )  #> Simple feature collection with 312 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337989 xmax: 438100 ymax: 5343185 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (431100 5338855) #> 2  POINT (431100 5338277) #> 3  POINT (431100 5340587) #> 4  POINT (431100 5340009) #> 5  POINT (431100 5342319) #> 6  POINT (431100 5338277) #> 7  POINT (431600 5337989) #> 8  POINT (431100 5338855) #> 9  POINT (431100 5340009) #> 10 POINT (431600 5339721)  sample_systematic(   raster = sr,   cellsize = 1000,   access = ac,   buff_inner = 50,   buff_outer = 200 ) #> An access layer has been provided. An internal buffer of 50 m and an external buffer of 200 m have been applied #> Simple feature collection with 15 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 432600 ymin: 5338200 xmax: 437600 ymax: 5343200 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (434600 5338200) #> 2  POINT (436600 5338200) #> 3  POINT (432600 5339200) #> 4  POINT (434600 5339200) #> 5  POINT (437600 5339200) #> 6  POINT (435600 5340200) #> 7  POINT (432600 5341200) #> 8  POINT (433600 5341200) #> 9  POINT (434600 5341200) #> 10 POINT (432600 5342200)  sample_systematic(   raster = sr,   cellsize = 1000,   square = FALSE,   location = \"random\" ) #> Simple feature collection with 45 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431109.6 ymin: 5337701 xmax: 438141.7 ymax: 5343222 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                    geometry #> 1  POINT (431109.6 5337760) #> 2  POINT (431385.5 5343222) #> 3    POINT (431560 5340219) #> 4  POINT (431172.9 5342155) #> 5  POINT (432290.5 5339510) #> 6  POINT (432251.1 5341330) #> 7  POINT (432140.6 5342894) #> 8  POINT (432574.8 5338422) #> 9  POINT (432678.9 5340056) #> 10 POINT (432444.8 5341926)"},{"path":"/reference/sgsR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sgsR: Structurally Guided Sampling Approaches using ALS Data — sgsR-package","title":"sgsR: Structurally Guided Sampling Approaches using ALS Data — sgsR-package","text":"package provides functions enable stratification sampling structurally guided sampling using ALS data.","code":""},{"path":[]},{"path":"/reference/sgsR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sgsR: Structurally Guided Sampling Approaches using ALS Data — sgsR-package","text":"Maintainer: Tristan RH Goodbody goodbody.t@gmail.com (ORCID) Authors: Nicholas C Coops nicholas.coops@ubc.ca (ORCID)","code":""},{"path":"/reference/strat_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Breaks stratification — strat_breaks","title":"Breaks stratification — strat_breaks","text":"Stratify metrics raster using user defined breaks","code":""},{"path":"/reference/strat_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breaks stratification — strat_breaks","text":"","code":"strat_breaks(   mraster,   mraster2 = NULL,   breaks,   breaks2 = NULL,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/strat_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breaks stratification — strat_breaks","text":"mraster Spatraster. Primary covariate raster stratify. mraster2 Spatraster. Secondary covariate raster stratify. breaks Numeric. Vector breakpoints mraster breaks2 Numeric. Vector breakpoints mraster2 (provided) plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Breaks stratification — strat_breaks","text":"Returns output stratification spatRaster list details = TRUE. list returned: details list output prcomp function raster stratified spatRaster based quantiles plot ggplot histogram object showing distribution break points.","code":""},{"path":[]},{"path":"/reference/strat_breaks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Breaks stratification — strat_breaks","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_breaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Breaks stratification — strat_breaks","text":"","code":"#--- Load raster ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  #--- create vector breaks ---# br.max <- c(3, 5, 11, 18) br.sd <- c(1, 2, 5)  strat_breaks(   mraster = mr$zq90,   breaks = br.max,   plot = TRUE,   details = TRUE )   #> $details #> $details$breaks #> [1]  3  5 11 18 #>  #> $details$breaks2 #> NULL #>  #>  #> $raster #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      5  #>  #> $plot #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  #>   strat_breaks(   mraster = mr$zq90,   mraster2 = mr$zsd,   breaks = br.max,   breaks2 = br.sd,   plot = TRUE )   #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :     17"},{"path":"/reference/strat_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"k-means stratification — strat_kmeans","title":"k-means stratification — strat_kmeans","text":"Stratify metrics raster using kmeans algorithm","code":""},{"path":"/reference/strat_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"k-means stratification — strat_kmeans","text":"","code":"strat_kmeans(   mraster,   nStrata,   iter = 500,   algorithm = \"Lloyd\",   center = TRUE,   scale = TRUE,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/strat_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"k-means stratification — strat_kmeans","text":"mraster spatRaster. ALS metrics raster. nStrata Character. Number desired strata. iter Numeric. maximum number iterations allowed. algorithm Character. Lloyd (default) MacQueen algorithms. center Logical. Value indicating whether variables shifted zero centered. scale Logical. Value indicating whether variables scaled unit variance plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"k-means stratification — strat_kmeans","text":"output stratification spatRaster, list details = TRUE.","code":""},{"path":[]},{"path":"/reference/strat_kmeans.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"k-means stratification — strat_kmeans","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"k-means stratification — strat_kmeans","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  #--- perform stratification using k-means ---# kmeans <- strat_kmeans(   mraster = mr,   nStrata = 5 ) #> K-means being performed on 9 layers with 5 centers.  kmeans <- strat_kmeans(   mraster = mr,   nStrata = 5,   iter = 1000,   algorithm = \"MacQueen\",   plot = TRUE,   details = TRUE ) #> K-means being performed on 9 layers with 5 centers.   kmeans <- strat_kmeans(   mraster = mr,   nStrata = 5,   iter = 1000,   plot = TRUE,   filename = tempfile(fileext = \".tif\"),   overwrite = TRUE ) #> K-means being performed on 9 layers with 5 centers."},{"path":"/reference/strat_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Map 2 stratified rasters — strat_map","title":"Map 2 stratified rasters — strat_map","text":"Map stratified rasters combined stratification.","code":""},{"path":"/reference/strat_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map 2 stratified rasters — strat_map","text":"","code":"strat_map(   sraster,   sraster2,   stack = FALSE,   filename = NULL,   overwrite = FALSE,   plot = FALSE,   details = FALSE,   ... )"},{"path":"/reference/strat_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map 2 stratified rasters — strat_map","text":"sraster spatRaster. Primary stratification raster. sraster2 spatRaster. Secondary stratification raster. stack Logical. Default = FALSE. TRUE, output raster 3 layers: strata, strata2, stratamapped. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output mapped stratified spatRaster object. TRUE return list $outRaster mapped stratified raster, $lookUp lookup table stratification. ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map 2 stratified rasters — strat_map","text":"spatRaster object.","code":""},{"path":"/reference/strat_map.html","id":"mapping","dir":"Reference","previous_headings":"","what":"Mapping","title":"Map 2 stratified rasters — strat_map","text":"mapping algorithm take stratification sraster combine overlying strata values sraster2. result stratamapped attribute values inputs combined. .e. strata = 1 strata2 = 1 stratamapped = 11. strata = 2 strata2 = 14 stratamapped = 214.","code":""},{"path":[]},{"path":"/reference/strat_map.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Map 2 stratified rasters — strat_map","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map 2 stratified rasters — strat_map","text":"","code":"#--- load input metrics raster ---# raster <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") srasterkmeans <- terra::rast(raster)  #--- read polygon coverage ---# poly <- system.file(\"extdata\", \"inventory_polygons.shp\", package = \"sgsR\") fri <- sf::st_read(poly) #> Reading layer `inventory_polygons' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\inventory_polygons.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 632 features and 3 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  #--- stratify polygon coverage ---# #--- specify polygon attribute to stratify ---#  attribute <- \"NUTRIENTS\"  #--- specify features within attribute & how they should be grouped ---# #--- as a single vector ---#  features <- c(\"poor\", \"rich\", \"medium\")  srasterfri <- strat_poly(   poly = fri,   attribute = attribute,   features = features,   raster = srasterkmeans,   plot = TRUE )   #--- map srasters ---# strat_map(   sraster = srasterfri,   sraster2 = srasterkmeans,   plot = TRUE )  #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :     11  #> max value   :    310   strat_map(   sraster = srasterfri,   sraster2 = srasterkmeans,   stack = TRUE,   details = TRUE,   plot = TRUE ) #> Stacking sraster, sraster2, and their combination (stratamapped).  #> $outRaster #> class       : SpatRaster  #> dimensions  : 277, 373, 3  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : memory   #>               kmeans.tif   #>               memory   #> names       : strata, strata2, stratamapped  #> min values  :      1,       1,           11  #> max values  :      3,      10,          310  #>  #> $lookUp #>    strata strata2 stratamapped #> 1       3       2           32 #> 2       3       8           38 #> 3       3       7           37 #> 4       3       5           35 #> 5       1       4           14 #> 6       1       1           11 #> 7       1       3           13 #> 8       1       6           16 #> 9       1      10          110 #> 10      3       4           34 #> 11      3       6           36 #> 12      3       1           31 #> 13      1       7           17 #> 14      1       5           15 #> 15      1       9           19 #> 16      1       8           18 #> 17      1       2           12 #> 18      2       8           28 #> 19      2       7           27 #> 20      2      10          210 #> 21      2       4           24 #> 22      2       5           25 #> 23      2       2           22 #> 24      3       3           33 #> 25      3      10          310 #> 26      3       9           39 #> 27      2       6           26 #> 28      2       3           23 #> 29      2       1           21 #> 30      2       9           29 #>"},{"path":"/reference/strat_osb.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine optimum sample boundaries — strat_osb","title":"Determine optimum sample boundaries — strat_osb","text":"Determine optimum sample boundaries algorithm univariate populations using strata.data algorithm.","code":""},{"path":"/reference/strat_osb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine optimum sample boundaries — strat_osb","text":"","code":"strat_osb(   mraster,   nStrata,   nSamp,   subset = 1,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/strat_osb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine optimum sample boundaries — strat_osb","text":"mraster spatRaster. ALS metrics raster. nStrata Numeric. Number desired output strata. nSamp Numeric. Number desired samples - used within OSB algorithm help determine break points. subset Numeric. Value 0 1 (default) denoting proportion data use determine optimum sample boundaries. plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_osb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine optimum sample boundaries — strat_osb","text":"Returns output stratification spatRaster list details = TRUE. list returned: details list output strata.data function OSB optimum stratum boundaries nh optimum sample sizes stratum. osb vector optimum stratum boundaries. breaks matrix associated metric strata break values. raster stratified spatRaster based OSB.","code":""},{"path":"/reference/strat_osb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determine optimum sample boundaries — strat_osb","text":"Khan, E. ., Khan, M. G. M., & Ahsan, M. J. (2002). Optimum Stratification: Mathematical Programming Approach. Calcutta Statistical Association Bulletin, 52(1–4), 323–334. https://doi.org/10.1177/0008068320020518 Khan, M. G. M., Nand, N., & Ahmad, N. (2008). Determining optimum strata boundary points using dynamic programming. Survey methodology, 34(2), 205-214. M.G.M. Khan, K.G. Reddy & D.K. Rao (2015) Designing stratified sampling economic business surveys, Journal Applied Statistics, 42:10, 2080-2099, DOI: 10.1080/02664763.2015.1018674","code":""},{"path":[]},{"path":"/reference/strat_osb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine optimum sample boundaries — strat_osb","text":"Tristan R.H. Goodbody","code":""},{"path":[]},{"path":"/reference/strat_pcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal components stratification — strat_pcomp","title":"Principal components stratification — strat_pcomp","text":"Stratify metrics raster using principal components quantile breaks","code":""},{"path":"/reference/strat_pcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal components stratification — strat_pcomp","text":"","code":"strat_pcomp(   mraster,   nStrata,   nStrata2 = NULL,   center = TRUE,   scale = TRUE,   plot = FALSE,   samp = 1,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/strat_pcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal components stratification — strat_pcomp","text":"mraster Spatraster. Covariate raster stratify. nStrata Numeric. Number strata primary principal component. nStrata2 Numeric. Number strata secondary principal component. center Logical. Value indicating whether variables shifted zero centered. scale Logical. Value indicating whether variables scaled unit variance plot Logical. Plots output strata raster visualized strata boundary dividers. samp Numeric. Proportion raster cells plot 0-1. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. ... Additional arguments passed prcomp.","code":""},{"path":"/reference/strat_pcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal components stratification — strat_pcomp","text":"Returns output stratification spatRaster list details = TRUE. list returned: details list output prcomp function raster stratified spatRaster based PCA plot ggplot scatter plot object strata colour coded strata boundaries delineated","code":""},{"path":[]},{"path":"/reference/strat_pcomp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Principal components stratification — strat_pcomp","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_pcomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Principal components stratification — strat_pcomp","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  strat_pcomp(   mraster = mr,   nStrata = 5,   plot = TRUE )  #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      5   strat_pcomp(   mraster = mr,   nStrata = 4,   nStrata2 = 4,   plot = TRUE,   details = TRUE )  #> $details #> Standard deviations (1, .., p=9): #> [1] 2.66328897 1.09805898 0.66339469 0.41858538 0.22109594 0.14478794 #> [7] 0.09669328 0.07739106 0.02581106 #>  #> Rotation (n x k) = (9 x 9): #>                PC1         PC2         PC3         PC4         PC5 #> zmax     0.3718561  0.05890652  0.13655303  0.18644188 -0.02967021 #> zmean    0.2892076  0.11179079 -0.94037185  0.11669464 -0.01101177 #> zsd      0.2902484 -0.57132611  0.07358411 -0.03485495 -0.12710815 #> pzabove2 0.2762415  0.57389014  0.11046261 -0.48982874 -0.53278380 #> zq20     0.3222793  0.42913513  0.17765055  0.04688184  0.69772164 #> zq50     0.3621931  0.06711670  0.16260903  0.50497308 -0.03554264 #> zq70     0.3669446 -0.07622676  0.13483825  0.33474905 -0.33679147 #> zq90     0.3576125 -0.24286784  0.04467110 -0.28486752  0.00494469 #> zq95     0.3463317 -0.27351876 -0.03548477 -0.50997312  0.31217248 #>                   PC6          PC7         PC8          PC9 #> zmax     -0.022902433  0.058181544  0.12813760 -0.885232514 #> zmean     0.061423536  0.005559276 -0.04493042  0.001085691 #> zsd       0.373461072 -0.062831197 -0.65029797 -0.015746780 #> pzabove2  0.007219003  0.005909104 -0.23569527  0.052045306 #> zq20      0.371793616 -0.128585416 -0.12943905  0.141020587 #> zq50     -0.525190662  0.398814446 -0.24627692  0.293390931 #> zq70      0.136444231 -0.587797301  0.42249155  0.270652072 #> zq90      0.287643242  0.607152727  0.49439800  0.184814994 #> zq95     -0.583751620 -0.320739852  0.05279230  0.005601089 #>  #> $raster #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :     16  #>  #> $plot  #>   strat_pcomp(   mraster = mr,   nStrata = 3,   nStrata2 = 3,   filename = tempfile(fileext = \".tif\") ) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      9"},{"path":"/reference/strat_poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratify using polygons — strat_poly","title":"Stratify using polygons — strat_poly","text":"Stratify based polygon coverage attributes features.","code":""},{"path":"/reference/strat_poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratify using polygons — strat_poly","text":"","code":"strat_poly(   poly,   attribute,   features,   raster,   filename = NULL,   overwrite = FALSE,   plot = FALSE,   details = FALSE,   ... )"},{"path":"/reference/strat_poly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratify using polygons — strat_poly","text":"poly sf. Input polygon coverage. e.g. - forest resources inventory coverage. attribute Character. Name attribute within poly stratified features vector/list. Vector list vectors features within attribute guide stratification. raster spatRaster. Raster template enable polygon raster conversion. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. plot Logical. Plots output spatRaster. details Logical. FALSE (default) output spatRaster object stratified polygon attributes. TRUE return list $outRaster stratified attributes, $lookUp lookup table stratification, poly defined polygon attribute corresponding features / strata ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_poly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratify using polygons — strat_poly","text":"spatRaster object.","code":""},{"path":[]},{"path":"/reference/strat_poly.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stratify using polygons — strat_poly","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_poly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratify using polygons — strat_poly","text":"","code":"#--- load input metrics raster ---# raster <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sraster <- terra::rast(raster)  #--- read polygon coverage ---# poly <- system.file(\"extdata\", \"inventory_polygons.shp\", package = \"sgsR\") fri <- sf::st_read(poly) #> Reading layer `inventory_polygons' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\inventory_polygons.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 632 features and 3 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  #--- stratify polygon coverage ---# #--- specify polygon attribute to stratify ---#  attribute <- \"NUTRIENTS\"  #--- specify features within attribute & how they should be grouped ---# #--- as a single vector ---#  features <- c(\"poor\", \"rich\", \"medium\")  srasterpoly <- strat_poly(   poly = fri,   attribute = attribute,   features = features,   raster = sraster,   plot = TRUE )   #--- or as multiple lists ---#  g1 <- \"poor\" g2 <- c(\"rich\", \"medium\")  features <- list(g1, g2)  srasterpoly <- strat_poly(   poly = fri,   attribute = attribute,   features = features,   raster = sraster,   plot = TRUE,   details = TRUE )"},{"path":"/reference/strat_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantiles stratification — strat_quantiles","title":"Quantiles stratification — strat_quantiles","text":"Stratify metric raster using metric quantiles.","code":""},{"path":"/reference/strat_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantiles stratification — strat_quantiles","text":"","code":"strat_quantiles(   mraster,   mraster2 = NULL,   nStrata,   nStrata2 = NULL,   plot = FALSE,   details = FALSE,   samp = 1,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/strat_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantiles stratification — strat_quantiles","text":"mraster spatRaster. ALS metrics raster. mraster2 Spatraster. Secondary covariate raster stratify. nStrata Numeric. Number quantiles stratify primary covariate. nStrata2 Numeric. Number quantiles stratify secondary covariate. plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. samp Numeric. Determines proportion cells plot scatterplot (default = 1).  Lower values reduce visualization time. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantiles stratification — strat_quantiles","text":"Returns output stratification spatRaster list details = TRUE. list returned: details list output prcomp function raster stratified spatRaster based quantiles plot ggplot histogram / scatter plot object (depends whether metric2 supplied). Histogram shows distribution break points scatter plot shows colour coded strata boundaries.","code":""},{"path":[]},{"path":"/reference/strat_quantiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quantiles stratification — strat_quantiles","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_quantiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantiles stratification — strat_quantiles","text":"","code":"#--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  strat_quantiles(mraster = mr$zq90,                 nStrata = 4,                 plot = TRUE) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      4   strat_quantiles(mraster = mr$zq90,                  mraster2 = mr$zsd,                 nStrata = 3,                  nStrata2 = 4) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :     12"},{"path":"/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"sym() creates symbol string syms() creates list symbols character vector. enquo() enquos() delay execution one several function arguments. enquo() returns single quoted expression, like blueprint delayed computation. enquos() returns list quoted expressions. expr() quotes new expression locally. mostly useful build new expressions around arguments captured enquo() enquos(): expr(mean(!!enquo(arg), na.rm = TRUE)). as_name() transforms quoted variable name string. Supplying something else quoted variable name error. unlike as_label() also returns single string supports kind R object input, including quoted function calls vectors. purpose summarise object single label. label often suitable default name. know quoted expression contains (instance expressions captured enquo() variable name, call function, unquoted constant), use as_label(). know quoted simple variable name, like enforce , use as_name(). learn tidy eval use tools, visit https://tidyeval.tidyverse.org Metaprogramming section Advanced R.","code":""}]
