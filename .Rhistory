include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
strata_m <- terra::mask(sraster,
mask = sraster,
maskvalues = s,
inverse = TRUE
)
names(strata_m) <- "strata"
if (!missing(access)) {
strata_m_buff <- terra::mask(strata_m,
mask = access_buff$buff
)
sampAvail <- sum(!is.na(terra::values(strata_m_buff)))
if (sampAvail > n) {
message(
paste0(
"Buffered area contains ",
sampAvail,
" available  candidates. Sampling to reach ",
n,
" samples starting."
)
)
#--- rename to original strata sraster that will be used for sampling ---#
strata_m <- strata_m_buff
#--- if there are no samples to take within the specified 'buff_outer' distance extend buffer until values are found ---#
} else {
stop("Insufficient candidate samples within the buffered access extent. Consider altering buffer widths.")
}
}
#--- Define focal window ---#
w <- matrix(1 / (wrow * wcol), nr = wrow, nc = wcol)
suppressWarnings(strata_m_clust <-
terra::focal(
strata_m,
w = w,
na.rm = FALSE,
na.only = FALSE
))
names(strata_m_clust) <- "strata"
#--- Initiate number of sampled cells ---#
add_strata <- addSamples %>%
dplyr::filter(strata == s)
add_strata
sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
for (i in 1:nrow(toSample)) {
s <- as.numeric(toSample[i, 1])
n <- as.numeric(toSample[i, 2])
message(paste0("Processing strata : ", s))
if (n > 0) {
#--- mask for individual strata ---#
strata_m <- terra::mask(sraster,
mask = sraster,
maskvalues = s,
inverse = TRUE
)
names(strata_m) <- "strata"
#--- if access line polygon is specified create inner and outer buffers
if (!missing(access)) {
strata_m_buff <- terra::mask(strata_m,
mask = access_buff$buff
)
sampAvail <- sum(!is.na(terra::values(strata_m_buff)))
if (sampAvail > n) {
message(
paste0(
"Buffered area contains ",
sampAvail,
" available  candidates. Sampling to reach ",
n,
" samples starting."
)
)
#--- rename to original strata sraster that will be used for sampling ---#
strata_m <- strata_m_buff
#--- if there are no samples to take within the specified 'buff_outer' distance extend buffer until values are found ---#
} else {
stop("Insufficient candidate samples within the buffered access extent. Consider altering buffer widths.")
}
}
##################
#--- sampling ---#
##################
#--- RULE 1: select only cells surrounded by cells with same strata ---#
#--- Define focal window ---#
w <- matrix(1 / (wrow * wcol), nr = wrow, nc = wcol)
suppressWarnings(strata_m_clust <-
terra::focal(
strata_m,
w = w,
na.rm = FALSE,
na.only = FALSE
))
names(strata_m_clust) <- "strata"
#--- Initiate number of sampled cells ---#
add_strata <- addSamples %>%
dplyr::filter(strata == s)
if (nrow(add_strata) > 0) {
add_strata$type <- "existing"
if (!"rule" %in% colnames(add_strata)) {
add_strata$rule <- "existing"
}
}
#--- create indices for all, NA, and valid sampling candidates ---#
idx_all <- 1:terra::ncell(strata_m_clust)
idx_na <- is.na(terra::values(strata_m_clust))
validCandidates <- idx_all[!idx_na]
#--- Rule 1 sampling ---#
nCount <- 0 # Number of sampled cells
# While loop for RULE 1
while (length(validCandidates) > 0 & nCount < n) {
#-- identify potential sample from candidates ---#
smp <- sample(1:length(validCandidates), size = 1)
smp_cell <- validCandidates[smp]
#--- extract coordinates and sample details ---#
add_temp <- data.frame(
cell = smp_cell,
X = terra::xFromCell(strata_m_clust, smp_cell),
Y = terra::yFromCell(strata_m_clust, smp_cell),
strata = strata_m_clust[smp_cell]
)
#--- Remove sampled cell from validCandidates so that it cannot be sampled again later ---#
validCandidates <- validCandidates[-smp]
#--- populate add_temp with values ---#
add_temp$type <- "new"
add_temp$rule <- "rule1"
add_temp[, extraCols] <- NA
#--- If add_strata is empty, sampled cell accepted ---#
if (nrow(add_strata) == 0) {
add_strata <- add_temp[, c("X", "Y", "strata", "type", "rule", extraCols)]
nCount <- nCount + 1
#--- If add_strata isn't empty, check distance with all other sampled cells in strata ---#
}
if (!is.null(mindist)) {
dist <- spatstat.geom::crossdist(add_temp$X, add_temp$Y, add_strata$X, add_strata$Y)
#--- If all less than 'mindist' - accept sampled cell otherwise reject ---#
if (all(as.numeric(dist) > mindist)) {
add_strata <- rbind(add_strata, add_temp[, c("X", "Y", "strata", "type", "rule", extraCols)])
nCount <- nCount + 1
}
} else {
#--- if mindist is not defined ---#
add_strata <- rbind(add_strata, add_temp[, c("X", "Y", "strata", "type", "rule", extraCols)])
nCount <- nCount + 1
}
}
#---- RULE 2 sampling ---#
if (nCount < n) {
idx_all <- 1:terra::ncell(strata_m)
idx_na <- is.na(terra::values(strata_m))
validCandidates <- idx_all[!idx_na]
while (length(validCandidates) > 0 & nCount < n) {
#-- identify potential sample from candidates ---#
smp <- sample(1:length(validCandidates), size = 1)
smp_cell <- validCandidates[smp]
#--- extract coordinates and sample details ---#
add_temp <- data.frame(
cell = smp_cell,
X = terra::xFromCell(strata_m, smp_cell),
Y = terra::yFromCell(strata_m, smp_cell),
strata = validCandidates[smp_cell]
)
#--- Remove sampled cell from validCandidates so that it cannot be sampled again later ---#
validCandidates <- validCandidates[-smp]
add_temp$rule <- "rule2"
add_temp$type <- "new"
add_temp[, extraCols] <- NA
add_temp$strata <- s
if (nrow(add_strata) == 0) {
add_strata <- add_temp[, c("X", "Y", "strata", "type", "rule", extraCols)]
nCount <- nCount + 1
#--- If add_strata isn't empty, check distance with all other sampled cells in strata ---#
}
if (!is.null(mindist)) {
dist <- spatstat.geom::crossdist(add_temp$X, add_temp$Y, add_strata$X, add_strata$Y)
#--- If all less than 'mindist' - accept sampled cell otherwise reject ---#
if (all(as.numeric(dist) > mindist)) {
add_strata <- rbind(add_strata, add_temp[, c("X", "Y", "strata", "type", "rule", extraCols)])
nCount <- nCount + 1
}
} else {
#--- if mindist is not defined ---#
add_strata <- rbind(add_strata, add_temp[, c("X", "Y", "strata", "type", "rule", extraCols)])
nCount <- nCount + 1
}
}
}
if (nCount < n) {
message(sprintf("Strata %s: couldn't select required number of samples: %i instead of %i \n", s, nCount, n))
}
}
# Create out object if first iteration of loop
# Else just rbind output with what has been processed in the loop
if (i == 1) {
out <- add_strata
} else {
out <- rbind(out, add_strata)
}
}
sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
toSample <- calculate_reqSamples(sraster, nSamp, existing)
toSample
i=1
s <- as.numeric(toSample[i, 1])
n <- as.numeric(toSample[i, 2])
s
s <- as.numeric(toSample[i, 1])
toSample <- calculate_reqSamples(sraster, nSamp, existing)
as.numeric(toSample[i, 1])
toSample
toSample[i, 1]
i
i=1
as.numeric(toSample[i, 1])
s <- as.numeric(toSample[i, 1])
n <- as.numeric(toSample[i, 2])
message(paste0("Processing strata : ", s))
as.numeric(toSample[i, 2])
strata_m <- terra::mask(sraster,
mask = sraster,
maskvalues = s,
inverse = TRUE
)
names(strata_m) <- "strata"
strata_m
#--- Define focal window ---#
w <- matrix(1 / (wrow * wcol), nr = wrow, nc = wcol)
suppressWarnings(strata_m_clust <-
terra::focal(
strata_m,
w = w,
na.rm = FALSE,
na.only = FALSE
))
names(strata_m_clust) <- "strata"
sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
e.sr
load_all()
sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
unique(k$strata)
hist(k$strata)
load_all()
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
toSample
addSamples
toSample
toSample %>% filter(total < 0)
toSample
toSample %>% dplyr::filter(total < 0)
st=1
toSampleNeg %>%
dplyr::filter(strata == st) %>%
dplyr::select(total) %>%
pull()
toSampleNeg %>%
dplyr::filter(strata == st) %>%
dplyr::select(total) %>%
dplyr::pull()
toSampleNeg <- toSample %>% dplyr::filter(total < 0)
toSampleNeg
st
toSampleNeg %>%
dplyr::filter(strata == st) %>%
dplyr::select(total) %>%
dplyr::pull()
remSamp <- sample(x = addSamples, size = abs(rem))
rem <- toSampleNeg %>%
dplyr::filter(strata == st) %>%
dplyr::select(total) %>%
dplyr::pull()
remSamp <- sample(x = addSamples, size = abs(rem))
remSamp
abs(rem)
addSamples
rem <- toSampleNeg %>%
dplyr::filter(strata == st) %>%
dplyr::select(total) %>%
dplyr::pull()
addSampSub <- addSamples %>%
dplyr::filter(strata == st)
remSamp <- sample(x = addSampSub, size = abs(rem))
addSampSub
abs(rem)
sample(x = addSampSub, n = abs(rem))
abs(rem)
addSamples %>%
dplyr::filter(strata == st) %>%
dplyr::sample_n(abs(rem))
remSamp <- addSamples %>%
dplyr::filter(strata == st) %>%
dplyr::sample_n(abs(rem))
addSampSub[-remSamp,]
addSamples %>%
dplyr::filter(strata == st) %>%
dplyr::sample_n(abs(rem))
dplyr::anti_join(addSamples, remSamp)
nrow(addSamples)
nrow(dplyr::anti_join(addSamples, remSamp))
addSamples %>%
dplyr::filter(strata == st) %>%
dplyr::sample_n(abs(rem)) %>%
dplyr::anti_join(addSamples, .)
remSamp <- addSamples %>%
dplyr::filter(strata == st) %>%
dplyr::sample_n(abs(rem)) %>%
dplyr::anti_join(addSamples, .)
nrow(remSamp)
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
load_all()
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
load_all()
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
load_all()
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
load_all()
load_all()
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
toSampleNeg
load_all()
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
toSampleNeg <- toSample %>% dplyr::filter(total < 0)
toSampleNeg
o <- data.frame()
unique(toSampleNeg$strata)
st = 4
toSampleNeg %>%
dplyr::filter(strata == st) %>%
dplyr::select(total) %>%
dplyr::pull()
rem <- toSampleNeg %>%
dplyr::filter(strata == st) %>%
dplyr::select(total) %>%
dplyr::pull()
message(paste0("'include = TRUE` - Stratum ", s, " overrepresented - ", abs(rem), " samples removed." ))
addSamples %>%
dplyr::filter(strata == st) %>%
dplyr::sample_n(abs(rem)) %>%
dplyr::anti_join(addSamples, .)
load_all()
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
k
toSample
load_all()
toSample
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
load_all()
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
load_all()
k <-  sample_strat(sraster = sraster,
nSamp = 200, # desired sample number
access = access, # define access road network
existing = e.sr, # existing samples with strata values
include = TRUE, # include existing plots in nSamp total
buff_inner = 50, # inner buffer - no samples within this distance from road
buff_outer = 200, # outer buffer - no samples further than this distance from road
filename = tempfile(fileext = ".shp")) # write output samples to file
load_all()
